{"version":3,"sources":["./src/app/components/tepmlate-editor/tepmlate-editor.component.ts","./src/app/components/tepmlate-editor/tepmlate-editor.component.html","./src/app/components/main-layout/main-layout.component.ts","./src/app/components/main-layout/main-layout.component.html","./src/app/classes/dataset.ts","./src/app/components/projects/projects.component.html","./src/app/components/projects/projects.component.ts","./src/app/components/topology/topology.component.ts","./src/app/components/topology/topology.component.html","./src/app/classes/node.ts","./src/environments/environment.ts","./src/app/components/selected-item-info/selected-item-info.component.ts","./src/app/components/selected-item-info/selected-item-info.component.html","./src/app/components/select_table/select-table.component.ts","./src/app/components/select_table/select-table.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/main-toolbar/main-toolbar.component.ts","./src/app/components/main-toolbar/main-toolbar.component.html","./src/app/components/domain-link-component/domain-link-component.component.html","./src/app/components/domain-link-component/domain-link-component.component.ts","./src/app/app.module.ts","./src/app/services/files.service.ts","./src/app/services/project.service.ts","./src/app/classes/project.ts","./src/app/services/template.service.ts","./src/app/components/selected-item-inspector/selected-item-inspector.component.ts","./src/app/components/selected-item-inspector/selected-item-inspector.component.html","./src/app/components/files-tree/files-tree.component.ts","./src/app/components/files-tree/files-tree.component.html","./src/app/components/source-code/source-code.component.ts","./src/app/components/source-code/source-code.component.html","./src/app/components/topology-grid-view/topology-grid-view.component.ts","./src/app/components/topology-grid-view/topology-grid-view.component.html","./src/app/classes/topology.ts","./src/app/services/events.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { EventService } from 'src/app/services/events.service';\nimport { TemplateService } from 'src/app/services/template.service';\n\n@Component({\n  selector: 'tepmlate-editor',\n  templateUrl: './tepmlate-editor.component.html',\n  styleUrls: ['./tepmlate-editor.component.css']\n})\nexport class TepmlateEditorComponent implements OnInit {\n  fileName?: string;\n  params?: string;\n  fileContent: any;\n  @ViewChild('templateEditor') editor: any;\n  \n  constructor(private teplateService: TemplateService, private eventService: EventService) { \n    eventService.projectEvent$.subscribe(value => {\n      this.fileName = value.template\n      this.params = JSON.stringify(value.templateParams)\n      this.fileContent = JSON.stringify(value.data || {}, null, 4)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  setData() {\n    this.eventService.emitClearAllEvent()\n    this.eventService.emitJoinDataEvent(JSON.parse(this.fileContent))\n  }\n\n  renderTemplate() {\n    if(this.fileName) {\n      this.eventService.emitSpinnerEvent(true);\n      this.eventService.emitClearAllEvent()\n      this.teplateService.renderTemplate(this.fileName, this.params)\n        .subscribe(s => {\n          this.fileContent = JSON.stringify(s, null, 4)          \n          this.eventService.emitJoinDataEvent(s)\n          this.eventService.emitSpinnerEvent(false);\n        }, error => {        \n          console.log(\"Error while parse template!\")\n          console.log(error)\n          this.fileContent = error.error.text;\n          this.eventService.emitSpinnerEvent(false);\n        })\n    }\n  }\n\n}\n","<button mat-icon-button aria-label=\"Render\" matTooltip=\"Render template\" (click)=\"renderTemplate()\">\n  <mat-icon>cake</mat-icon>\n</button>\n<input type=\"text\" [(ngModel)]=\"fileName\">\n<input type=\"params\" [(ngModel)]=\"params\">\n<button mat-icon-button aria-label=\"Set data\" matTooltip=\"Set json data to topology graph\" (click)=\"setData()\">\n  <mat-icon>done</mat-icon>\n</button>\n\n<ace-editor\n[(text)]=\"fileContent\"\n #templateEditor style=\"height:600px;\">\n</ace-editor>\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { EventService } from 'src/app/services/events.service';\nimport { TopologyComponent } from '../topology/topology.component'\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  @ViewChild(TopologyComponent)\n  private topologyComponent!: TopologyComponent;\n\n  showSpinner: boolean = false;\n  leftArea = \"25%\"\n  mainArea = \"75%\"\n\n  constructor(private eventService: EventService, public cd: ChangeDetectorRef) {\n    eventService.spinnerEvent$.subscribe(value => {\n      this.showSpinner = value;\n      cd.detectChanges();\n    })\n    eventService.wideLayoutEvent$.subscribe(_ => {\n      this.leftArea = \"50%\";\n      this.mainArea = \"50%\"\n    })\n    eventService.narrowLayoutEvent$.subscribe(_ => {\n      this.leftArea = \"25%\";\n      this.mainArea = \"75%\"\n    })    \n  }\n\n  zoomToFit() {\n    this.topologyComponent.zoomToFit();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"overlay\" *ngIf=\"showSpinner === true\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" style=\"height:100%\">\n      <mat-spinner></mat-spinner>\n    </div>    \n  </div>\n\n  <div class=\"loaded-content\" [class.blurred]=\"showSpinner\">   \n        \n    <app-main-toolbar class=\"noprint\"></app-main-toolbar>\n    \n    <div fxLayout=\"row\">\n        <div fxFlex=\"{{leftArea}}\" style=\"overflow: auto;height: 93vh;\" class=\"noprint\">\n          <div style=\"overflow: auto;height: 32vh;\"><selected-item-inspector></selected-item-inspector></div>\n          <mat-divider></mat-divider>\n          <div style=\"overflow: auto;height: 60.5vh;\"><select-table></select-table></div>\n        </div>\n        <div fxFlex=\"5px\" style=\"background-color: gray;\">\n        </div>\n        <div fxFlex=\"75%\" style=\"overflow: auto;height: 93vh;\">          \n          <mat-tab-group>\n            <mat-tab label=\"Topology\">  \n              <div style=\"overflow: auto;height: 86vh;\">\n                <app-topology></app-topology>      \n              </div>\n            </mat-tab>\n            <mat-tab label=\"Data\">\n              <div style=\"overflow: auto;height: 86vh;\">\n                <topology-grid-view></topology-grid-view>\n              </div>              \n            </mat-tab>            \n            <mat-tab label=\"Templates\">\n              <div style=\"overflow: auto;height: 86vh;\">\n                <tepmlate-editor></tepmlate-editor>\n              </div>\n            </mat-tab>\n            <mat-tab label=\"Projects\">\n              <div style=\"overflow: auto;height: 86vh;\">\n                <app-projects></app-projects>\n              </div>\n            </mat-tab>\n            <mat-tab label=\"Item info\">\n              <div style=\"overflow: auto;height: 86vh;\">                \n                <selected-item-info></selected-item-info>\n              </div>\n            </mat-tab>            \n          </mat-tab-group>\n        </div>\n      </div>\n\n  </div>\n</div>\n\n\n","import { NodeType } from \"./node\";\r\n\r\nexport class Named {\r\n  name!: string;\r\n}\r\n\r\nexport class TopologyNode extends Named {  \r\n  nodeType?: NodeType;\r\n  in!: Dataset[];\r\n  out!: Dataset[];\r\n  layer!: string;\r\n  project?: string;\r\n}\r\n\r\nexport class Field  extends Named {\r\n  name!: string;\r\n  tableName?: string;\r\n  sources?: Field[];\r\n  fieldPlanType: String = \"Empty\";\r\n}\r\n\r\nexport class Dataset extends TopologyNode {  \r\n  datasetType?: NodeType;\r\n  pathToData?: string;\r\n  sourceFile?: string;\r\n  action?: string;\r\n  fields?: Field[];\r\n}\r\n","<mat-accordion class=\"example-headers-align\">\n    <mat-expansion-panel *ngFor=\"let project of projects\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n            {{project.name}}\n        </mat-panel-title>\n        <mat-panel-description>\n            <mat-icon *ngIf=\"project.domain == true\">class</mat-icon>\n            <mat-icon *ngIf=\"project.domain != true\">article</mat-icon>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p matLine>\n        {{project.template}}\n      </p>\n      <p matLine>\n        {{object2str(project.templateParams || {})}}\n      </p>\n      <mat-action-row>\n        <button mat-button color=\"basic\" (click)=\"loadProject(project)\" matTooltip=\"Load project data\">\n            Clear current and load\n            <mat-icon>content_paste</mat-icon>\n        </button>\n        <button mat-button color=\"basic\" (click)=\"loadProject(project, false)\" matTooltip=\"Add project data to current\">\n            Add to current<mat-icon>add_circle_outline</mat-icon>\n        </button>\n      </mat-action-row>      \n    </mat-expansion-panel>\n<mat-accordion>    \n","import { Component, OnInit } from '@angular/core';\nimport { Project } from 'src/app/classes/project';\nimport { EventService } from 'src/app/services/events.service';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { TemplateService } from 'src/app/services/template.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects?: Project[]\n  \n  constructor(private projectService: ProjectService, private templateService: TemplateService, private eventService: EventService) { \n    projectService.getProjects().subscribe(value => {\n      this.projects = value;\n    })\n  }\n\n  loadProject(project: Project, clearAll: boolean = true) {\n    this.projectService.loadProject(project, clearAll);\n  }\n\n  object2str(value: any): string {\n    return JSON.stringify(value)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { EventService } from \"../../services/events.service\";\r\nimport { ProjectFileDir, Topology } from \"../../classes/topology\";\r\nimport { Node, NodeData } from \"../../classes/node\";\r\nimport { Dataset, TopologyNode, Named } from '../../classes/dataset';\r\nimport { Subject } from 'rxjs';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\n\r\ninterface KeyValuePair {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-topology',\r\n  templateUrl: './topology.component.html',\r\n  styleUrls: ['./topology.component.css']\r\n})\r\nexport class TopologyComponent implements OnInit {\r\n\r\n  x: number = 1400;\r\n  y: number = 1200;\r\n  dim: [number, number] = [this.x, this.y];\r\n  inodes: Dataset[] = []\r\n  \r\n  clusters: any[] = []\r\n  nodes: Node[] = []\r\n  links: any[] = []\r\n  selectedTable: string = \"\"\r\n  error: any;\r\n  selected: Node | undefined;\r\n  data: Topology | undefined;\r\n  showMiniMap: boolean = false;\r\n  showClusters: boolean = true;\r\n  viewMode: string = \"datasets\";\r\n  inOut: TopologyNode[] = []\r\n\r\n  getNodeProject(node: Node): string | undefined {\r\n    return node.data?.dataset.project;\r\n  }\r\n\r\n  getTables(): string[] {\r\n    let res: string[] = []\r\n    if(this.nodes) {\r\n      res = this.nodes.map(n => n.data?.dataset.name||\"\")\r\n    }\r\n    return res;    \r\n  }\r\n\r\n  zoomToFit$: Subject<boolean> = new Subject();\r\n  panToNode$: Subject<any> = new Subject();\r\n  center$: Subject<boolean> = new Subject();\r\n  currentProject = \"\";\r\n\r\n  constructor(\r\n    private eventService: EventService, \r\n    private projectService: ProjectService, \r\n    public cd: ChangeDetectorRef) { \r\n    eventService.zoomToFitEvent$.subscribe(value => this.zoomToFit());\r\n    eventService.centerTopologyEvent$.subscribe(value => this.center$.next(true));\r\n\r\n    eventService.getSelectedNodeProjectEvent$.subscribe(node => \r\n      eventService.emitReturnSelectedNodeProjectEvent(this.getNodeProject(node)));\r\n\r\n    eventService.clearAllEvent$.subscribe(value => this.clear())\r\n    eventService.joinDataEvent$.subscribe(value => {\r\n      this.calculateInOut(value.name, value.data || new Topology())\r\n      this.addData(value)\r\n    })\r\n    eventService.projectEvent$.subscribe(value => {\r\n      this.currentProject = value.name\r\n      this.addData(value.data || new Topology())\r\n      this.calculateInOut(value.name, value.data || new Topology())\r\n    })\r\n    eventService.tableSelectedEvent$.subscribe(value => {       \r\n      let found = this.nodes.find(node => node.data?.dataset?.name === value);\r\n      if(found) {\r\n        this.nodeClick(found)\r\n        this.panToNode$.next(found?.id)\r\n      }\r\n    })\r\n    eventService.filterByTableInEvent$.subscribe(value => {\r\n      if(this.data) {\r\n        this.getData(this.data, value)\r\n      }\r\n    })\r\n    eventService.filterByTableUsageEvent$.subscribe(value => {\r\n      if(this.data) {\r\n        this.getData(this.data, undefined, value)\r\n      }\r\n    })\r\n    eventService.filterByProjectEvent$.subscribe(value => {\r\n      if(this.data) {\r\n        this.getData(this.data, undefined, undefined, value)\r\n      }\r\n    })        \r\n    eventService.clearTableFilterEvent$.subscribe(value => {\r\n      if(this.data) {\r\n        this.getData(this.data)\r\n      }\r\n    })\r\n    eventService.clearProjectFilterEvent$.subscribe(value => {\r\n      if(this.data) {\r\n        this.getData(this.data)\r\n      }\r\n    })\r\n    eventService.toggleClustersEvent$.subscribe(value => {\r\n      this.showClusters = !this.showClusters\r\n    })\r\n    eventService.toggleViewEvent$.subscribe(value => {\r\n      this.viewMode = value\r\n      if(this.data) {\r\n        this.getData(this.data)\r\n      }      \r\n    })    \r\n  }\r\n\r\n  zoomToFit() {\r\n    this.zoomToFit$.next(true)\r\n  }  \r\n\r\n  checkCluster(layer: string, nodeName: string, clusters: any[], tablesId: KeyValuePair[]) {\r\n    let cluster: any = clusters.find((c: any) => c.label == layer)\r\n    if(!cluster) {\r\n      cluster = {id: layer, label: layer, childNodeIds: new Set()}\r\n      if(cluster.label == \"Hive\"){\r\n        cluster.data = {image: \"assets/Apache_Hive_logo.svg\"}\r\n      }\r\n      if(cluster.label == \"Oracle\"){\r\n        cluster.data = {image: \"assets/oracle-2.svg\"}\r\n      }      \r\n      if(cluster.label == \"DataMart\"){\r\n        cluster.data = {image: \"assets/datamart.png\"}\r\n      }      \r\n      clusters.push(cluster)\r\n    }\r\n    cluster.childNodeIds.add(tablesId.find(k => k.key == nodeName)?.value)\r\n  }\r\n  \r\n  findFileContent(dirs: ProjectFileDir[] | undefined, project: string | undefined, fileName: string | undefined): ProjectFileDir | undefined {\r\n    let found: ProjectFileDir | undefined = undefined\r\n    if(dirs) {\r\n      found = dirs.find(d => d.project == project && d.isFile == true && d.name == fileName)\r\n      if(!found) {\r\n        for(let d of dirs) {\r\n          found = this.findFileContent(d.childDirs, project, fileName)\r\n          if(found) {\r\n            break\r\n          }        \r\n        }\r\n      }    \r\n    }\r\n    return found\r\n  }\r\n\r\n  nodeClick(node: Node) {\r\n    this.selected = node\r\n    this.eventService.emitNodeSelectedEvent(node)\r\n    this.cd.detectChanges()\r\n  }\r\n\r\n  checkIfSelected(node: Node) {\r\n    return node.id == this.selected?.id\r\n  }\r\n\r\n  clear() {\r\n    this.currentProject = \"\"\r\n    let t = new Topology()\r\n    t.datasets = []\r\n    this.inOut = []\r\n    this.getData(t)\r\n  }\r\n\r\n  addData(data: Topology) {\r\n    let t = new Topology()\r\n    t.datasets = (this.data?.datasets || []).concat(data.datasets || [])\r\n    t.actions = (this.data?.actions || []).concat(data.actions || [])\r\n    this.getData(t)\r\n  }\r\n\r\n  private getNodes(): TopologyNode[] {\r\n    if(this.viewMode === \"actions\") {\r\n      return this.data?.actions || []\r\n    }\r\n    if(this.viewMode === \"inout\" && this.inOut) {\r\n      return this.inOut\r\n    }\r\n    return this.data?.datasets || []\r\n  }\r\n\r\n  private calculateInOut(project: string, data: Topology) {\r\n    //this.inOut = []\r\n    let inodes: TopologyNode[] = data.datasets || [];\r\n    this.projectService.normaizeTree(inodes, data.datasets || [], 0);\r\n    inodes.forEach(d => this.projectService.normalizeDataset(inodes, d));    \r\n    if(project !== \"\") {\r\n      let io = this.projectService.getProjectsInputOutput(inodes, project)\r\n      this.inOut.push(io)\r\n      this.projectService.normaizeTree(this.inOut, this.inOut, 0);\r\n      this.inOut.forEach(d => this.projectService.normalizeDataset(this.inOut, d));\r\n    }\r\n  }\r\n\r\n  getData(data: Topology, filterByTableIn: string | undefined = undefined, filterByTableUsage: string | undefined = undefined, filterByProject: string | undefined = undefined) {\r\n    this.eventService.emitSpinnerEvent(true)\r\n    this.cd.detectChanges();\r\n    this.data = data;\r\n    this.selected = undefined;\r\n    \r\n    let inodes: TopologyNode[] = this.getNodes();\r\n    this.projectService.normaizeTree(inodes, this.getNodes(), 0);\r\n    inodes.forEach(d => this.projectService.normalizeDataset(inodes, d));\r\n    inodes = inodes.filter(d => (filterByProject == undefined) || d.project == filterByProject)\r\n    \r\n    if(this.currentProject !== \"\") {\r\n      this.projectService.saveProjectStat({\"name\": this.currentProject, \"datasets\": inodes}, this.currentProject, \"normalizedTree\")\r\n    }\r\n\r\n    let filteredTables = filterByTableIn ? this.projectService.getInDatasets(filterByTableIn, inodes) : (filterByTableUsage ? this.projectService.getUsageDatasets(filterByTableUsage, inodes) : [])\r\n\r\n    if(filterByTableIn) {\r\n      if(filteredTables.indexOf(filterByTableIn) == -1) {\r\n        filteredTables.push(filterByTableIn)\r\n      }\r\n    } else {\r\n      if(filterByTableUsage) {\r\n        if(filteredTables.indexOf(filterByTableUsage) == -1) {\r\n          filteredTables.push(filterByTableUsage)\r\n        }\r\n      }      \r\n    }\r\n\r\n    let did: number = 0\r\n    let tablesId: KeyValuePair[] = inodes.map(d =>  {return { key: d.name, value: \"\" + ++did }} )\r\n    \r\n    let linkid: number = 0\r\n    let links: any[] = []\r\n    let clusters: any[] = []\r\n\r\n    inodes.forEach(d => {\r\n      let inlinks = d.in.map(l => {\r\n        return {\"id\": \"\"+ ++linkid,\"source\": tablesId.find(k => k.key == l.name)?.value, \"target\": tablesId.find(k => k.key == d.name)?.value}\r\n      });\r\n      links = links.concat(inlinks);\r\n    })\r\n\r\n    this.nodes = inodes\r\n      .filter(d => filteredTables.length == 0 || filteredTables.indexOf(d.name) > -1)\r\n      .map(d => {\r\n        this.checkCluster(d.layer, d.name, clusters, tablesId)\r\n        d.in.forEach(l => this.checkCluster(l.layer, l.name, clusters, tablesId))\r\n        return new Node(\r\n          tablesId.find(k => k.key == d.name)?.value || \"notfoundid\", d.name, \r\n          new NodeData(\"#a95963\", d)\r\n        )\r\n      }\r\n    )\r\n\r\n    this.links = links.filter(l => this.nodes.filter(n => n.id == l.source).length > 0 && this.nodes.filter(n => n.id == l.target).length > 0)\r\n    this.clusters = clusters.filter(c => this.nodes.find(n=>n.data?.dataset.layer === c.label));\r\n    this.eventService.emitTableListEvent(this.nodes.map(n => n.data?.dataset));\r\n    this.eventService.emitSpinnerEvent(false)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<ngx-graph\n  [view]=\"dim\"\n  layout=\"dagreCluster\"\n  [links]=\"links\"\n  [nodes]=\"nodes\"\n  [clusters]=\"this.showClusters ? clusters : []\"\n  [showMiniMap]=\"showMiniMap\"\n  [zoomToFit$]=\"zoomToFit$\"\n  [panToNode$]=\"panToNode$\"\n  [center$]=\"center$\"  \n  >\n<ng-template #nodeTemplate let-node>\n    <svg:g class=\"node-group ng-star-inserted\">\n<!--        <circle r=\"10\" cx=\"10\" cy=\"10\" class=\"ng-star-inserted\" fill=\"#a95963\"></circle> -->\n        <image [attr.href]=\"node.data.image\" height=\"40\" width=\"40\" fill=\"none\" (click)=\"nodeClick(node)\" fill=\"#a95963\"/>\n        <ng-container *ngIf=\"checkIfSelected(node)\">\n          <image href=\"./assets/check.svg\" height=\"40\" width=\"40\" fill=\"none\" fill=\"#a95963\"/>\n        </ng-container>\n        <text class=\"name\">{{ node.label }}</text>\n    </svg:g>\n</ng-template>\n\n<ng-template #clusterTemplate let-cluster>\n  <svg:g class=\"node cluster\">\n    <image [attr.href]=\"cluster.data.image\" height=\"100\" width=\"100\" fill=\"none\"/>\n    <svg:rect\n      rx=\"5\"\n      ry=\"5\"\n      [attr.width]=\"cluster.dimension.width\"\n      [attr.height]=\"cluster.dimension.height\"\n      [attr.fill]=\"cluster.data.color\"\n    />\n  </svg:g>\n</ng-template>\n\n</ngx-graph>","import { Dataset, TopologyNode } from './dataset'\r\n\r\nexport enum NodeType {\r\n  Table = \"Table\",\r\n  SH = \"SH\",\r\n  project = \"project\",\r\n  file = \"file\",\r\n  component = \"component\",\r\n  linked = \"Linked\"\r\n}\r\n\r\nexport class NodeData {\r\n  image: string = \"assets/dataset.ico\";\r\n  color: string = \"#a95963\";\r\n  dataset!: TopologyNode\r\n  constructor(color: string,  dataset: TopologyNode) {\r\n    this.image = this.getImage(dataset);\r\n    this.color = color\r\n    this.dataset = dataset\r\n  }\r\n\r\n  private getImage(dataset: any): string {\r\n    if(dataset.datasetType == \"Table\") {\r\n      return \"assets/dataset.ico\";\r\n    }\r\n    if(dataset.datasetType == \"SH\") {\r\n      return \"assets/sh.jpg\";\r\n    }\r\n    if(dataset.datasetType == \"project\") {\r\n      return \"assets/project.png\";\r\n    }\r\n    if(dataset.datasetType == \"file\") {\r\n      return \"assets/file.png\";\r\n    }\r\n    if(dataset.datasetType == NodeType.linked) {\r\n      return \"assets/linkedTable.png\";\r\n    }        \r\n    return \"assets/component.png\";\r\n  }\r\n}\r\n\r\nexport class Node {\r\n  id: string;\r\n  label: string;\r\n  data?: NodeData;\r\n  constructor(id: string, label: string, data?: NodeData) {\r\n    this.id = id\r\n    this.label = label\r\n    this.data = data\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  singleHtml: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { Named, Field, TopologyNode } from 'src/app/classes/dataset';\r\nimport { EventService } from 'src/app/services/events.service';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { SourceFilesService } from 'src/app/services/files.service';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\n\r\nclass Data {\r\n  useInProjects: Named[] | undefined = undefined\r\n}\r\n\r\n@Component({\r\n  selector: 'selected-item-info',\r\n  templateUrl: './selected-item-info.component.html',\r\n  styleUrls: ['./selected-item-info.component.css']\r\n})\r\nexport class SelectedItemInfoComponent implements OnInit {\r\n\r\n  selected: any;\r\n  data: Data = new Data();\r\n\r\n  selectedNodeProject: string | undefined;\r\n  currentProject: string | undefined;\r\n\r\n  treeControl = new NestedTreeControl<Field>(node => node.sources);\r\n\r\n  dataSource = new MatTreeNestedDataSource<Field>();\r\n\r\n  constructor(private eventService: EventService, private sourceFilesService: SourceFilesService, \r\n    private projectService: ProjectService) {\r\n    eventService.nodeSelectedEvent$.subscribe(value => {\r\n      this.selected = value;\r\n      this.getProjects();\r\n      this.dataSource.data = this.selected?.data?.dataset?.fields;\r\n      this.eventService.emitGetGetSelectedNodeProjectEvent(value);\r\n    })\r\n    eventService.returnSelectedNodeProjectEvent$.subscribe(value => {\r\n      this.selectedNodeProject = value\r\n    })\r\n    this.eventService.clearAllEvent$.subscribe(value => {\r\n      this.selected = undefined;\r\n      this.selectedNodeProject = undefined;\r\n      this.currentProject = undefined;\r\n    })\r\n    this.eventService.projectEvent$.subscribe(value => {\r\n      this.currentProject = value.name;\r\n    })\r\n  }\r\n\r\n  hasChild = (_: number, node: Field) => !!node.sources && node.sources.length > 0;\r\n\r\n  loadProject(project: string | undefined) {\r\n    if(project) {\r\n      this.eventService.emitProjectNameEvent(project)\r\n    }\r\n  }\r\n\r\n  loadDatasetVirtualProject(datasetName: string | undefined) {\r\n    if(datasetName) {\r\n      this.projectService.buildDatasetVirtualProject(datasetName)\r\n    }\r\n  }\r\n\r\n  filterByTableIn(tableName: string | undefined) {\r\n    if(tableName) {\r\n      this.eventService.emitFilterByTableInEvent(tableName);\r\n    }    \r\n  }\r\n  \r\n  filterByTableUsage(tableName: string | undefined) {\r\n    if(tableName) {\r\n      this.eventService.emitFilterByTableUsageEvent(tableName);\r\n    }    \r\n  }\r\n\r\n  clearTableFilter() {\r\n    this.eventService.emitClearTableFilterEvent();\r\n  }\r\n\r\n  getType() {\r\n      return this.selected?.data?.dataset?.datasetType;\r\n  }\r\n\r\n  getSource() {\r\n    return this.selected?.data?.dataset?.sourceFile;    \r\n  }\r\n\r\n  getAction() {\r\n    return this.selected?.data?.dataset?.action;    \r\n  }\r\n\r\n  getSourceFile() {\r\n    this.sourceFilesService.getSourceFileContent(this.selected.data?.dataset?.sourceFile)    \r\n      .subscribe(\r\n        fileContent => {\r\n          alert(fileContent)\r\n        },\r\n        error => alert(error.message)\r\n      )\r\n  }\r\n\r\n  getProjects() {\r\n    return this.projectService.getAllDatasetProjects(this.selected?.data?.dataset?.name)\r\n    .subscribe(      \r\n      (projects: any) => {\r\n        this.data.useInProjects = projects.docs\r\n      }\r\n    )\r\n  }  \r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectTable(value: string|undefined) {\r\n    this.eventService.emitTableSelectedEvent(value)\r\n  }  \r\n\r\n}\r\n","<mat-nav-list *ngIf=\"selected\">\r\n    <mat-list-item>\r\n      <label>{{selected?.data?.dataset?.name}}</label>\r\n      <span>&nbsp;</span>\r\n      <button mat-mini-fab color=\"basic\" (click)=\"loadDatasetVirtualProject(selected?.data?.dataset?.name)\">\r\n        <mat-icon>done</mat-icon>\r\n      </button>\r\n    </mat-list-item>    \r\n</mat-nav-list>\r\n\r\n<mat-tab-group>\r\n  <mat-tab label=\"Item info\">\r\n    <ng-template [ngIf]=\"data?.useInProjects\">\r\n      <mat-divider></mat-divider>\r\n      <label>Dataset: {{selected?.data?.dataset?.name}} is used in projects:</label>\r\n      <mat-nav-list *ngIf=\"data?.useInProjects\">\r\n        <mat-list-item *ngFor=\"let project of data?.useInProjects\">\r\n          <label>{{project.name}}</label>\r\n          <span>&nbsp;</span>\r\n          <button mat-mini-fab color=\"basic\" (click)=\"loadProject(project.name)\">\r\n            <mat-icon>done</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n      </mat-nav-list>\r\n    </ng-template>    \r\n  </mat-tab>\r\n  <mat-tab label=\"Project info\">\r\n    <domain-link-component [currentProject]=\"currentProject\" [currentItem]=\"selected?.data?.dataset?.name\"></domain-link-component>\r\n  </mat-tab>  \r\n</mat-tab-group>\r\n","import value from '*.json';\nimport {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { EventService } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'select-table',\n  templateUrl: './select-table.component.html',\n  styleUrls: ['./select-table.component.css']\n})\nexport class SelectTableComponent implements OnInit {\n\n  tables: string[] = [];\n  selectedTable: string |  undefined;\n  constructor(private eventService: EventService) { \n    eventService.tableListEvent$.subscribe(value => {\n      this.tables = value.map(d => (d?.name)||\"\").sort()\n    })\n    eventService.nodeSelectedEvent$.subscribe(value => {\n      this.selectedTable = value.data?.dataset.name;\n    })\n  }\n\n  selectTable(value: string|undefined) {\n    this.eventService.emitTableSelectedEvent(value)\n  }  \n\n  myControl = new FormControl();\n  filteredOptions: Observable<string[]> | undefined;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.tables.filter(table => table.toLowerCase().indexOf(filterValue) > -1);\n  }\n\n}\n","  <mat-selection-list #tableList [multiple]=\"false\">\n    <mat-list-option *ngFor=\"let table of tables\" (click)=\"selectTable(table)\" [value]=\"table\" selected=\"{{table == selectedTable}}\">\n      {{table}}\n    </mat-list-option>\n  </mat-selection-list>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'datalog3';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, SimpleChanges } from '@angular/core';\r\nimport { EventService } from \"../../services/events.service\";\r\nimport 'material-icons/iconfont/material-icons.css';\r\n\r\n@Component({\r\n  selector: 'app-main-toolbar',\r\n  templateUrl: './main-toolbar.component.html',\r\n  styleUrls: ['./main-toolbar.component.css']\r\n})\r\nexport class MainToolbarComponent implements OnInit   {\r\n\r\n  currentProject: string | undefined;\r\n  projects: string[] = []\r\n  viewMode = \"datasets\"\r\n\r\n  constructor(private eventService: EventService) { \r\n    eventService.nodeSelectedEvent$.subscribe(value => {\r\n      this.eventService.emitGetGetSelectedNodeProjectEvent(value);\r\n    })\r\n\r\n    this.eventService.projectEvent$.subscribe(value => {\r\n      this.currentProject = value.name;\r\n      if(!this.projects.includes(value.name)) {\r\n        this.projects.push(value.name);\r\n      }\r\n      if(this.projects.length == 6) {\r\n        this.projects.shift()\r\n      }\r\n    })\r\n\r\n    this.eventService.clearAllEvent$.subscribe(value => {\r\n      this.currentProject = undefined;\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  viewModeChanged() {\r\n    this.eventService.emitToggleViewEvent(this.viewMode)\r\n  }\r\n\r\n  zoomToFit() {\r\n    this.eventService.emitZoomToFitEvent();\r\n  }\r\n\r\n  centerGraph() {\r\n    this.eventService.emitCenterTopologyEvent();\r\n  }\r\n\r\n  clustersOnOff() {\r\n    this.eventService.emitToggleClustersEvent();\r\n  }  \r\n\r\n  wideLayout() {\r\n    this.eventService.emitWideLayoutEvent(true);\r\n  }\r\n\r\n  narrowLayout() {\r\n    this.eventService.emitNarrowLayoutEvent(true);\r\n  }  \r\n\r\n  clear() {\r\n    this.projects = []\r\n    this.eventService.emitClearAllEvent()\r\n  }\r\n\r\n  loadProject(project: string | undefined) {\r\n    if(project) {\r\n      this.eventService.emitProjectNameEvent(project)\r\n    }    \r\n  }\r\n\r\n  nextProject(): string | undefined {\r\n    if(this.currentProject) {\r\n      let selected = this.projects.indexOf(this.currentProject)\r\n      if(selected + 1 < this.projects.length) {\r\n        return this.projects[selected + 1];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  prevProject(): string | undefined {\r\n    if(this.currentProject) {\r\n      let selected = this.projects.indexOf(this.currentProject)\r\n      if(selected > 0) {\r\n        return this.projects[selected - 1];\r\n      }\r\n    }\r\n    return undefined;\r\n  }  \r\n}\r\n","<div fxLayout=\"row\">\r\n  <div fxFlex=\"30%\">\r\n    <section layout=\"row\">\r\n        <label>Data Topology</label>\r\n        \r\n        <button mat-button color=\"basic\" matTooltip=\"Zoom to fit\" (click)=\"zoomToFit()\">\r\n          <mat-icon>fit_screen</mat-icon>\r\n        </button>\r\n\r\n        <button mat-button color=\"basic\"  matTooltip=\"Center topology\" (click)=\"centerGraph()\">\r\n          <mat-icon>open_with</mat-icon>\r\n        </button>\r\n\r\n        <button mat-button color=\"basic\" matTooltip=\"Clusters on/off\" (click)=\"clustersOnOff()\">\r\n          <mat-icon>select_all</mat-icon>\r\n        </button> \r\n\r\n        <mat-button-toggle-group [(ngModel)]=\"viewMode\" (change)=\"viewModeChanged()\">\r\n          <mat-button-toggle matTooltip=\"View datasets\" value=\"datasets\">\r\n            <mat-icon>mediation</mat-icon>\r\n          </mat-button-toggle>\r\n\r\n          <mat-button-toggle matTooltip=\"View actions\" value=\"actions\">\r\n            <mat-icon>compare_arrows</mat-icon>\r\n          </mat-button-toggle>        \r\n\r\n          <mat-button-toggle matTooltip=\"View in-out\" value=\"inout\">\r\n            <mat-icon>moving</mat-icon>\r\n          </mat-button-toggle>\r\n        </mat-button-toggle-group>\r\n      </section>\r\n  </div>\r\n  <div fxFlex=\"65%\" fxLayoutAlign=\"start center\">\r\n    <section layout=\"row\">\r\n      <span>&nbsp;</span>\r\n      <ng-container *ngFor=\"let project of projects\">\r\n        <span *ngIf=\"project === currentProject\" style=\"color: mediumblue;\">&nbsp;{{project}}&nbsp;</span>\r\n        <span *ngIf=\"project !== currentProject\" style=\"color: gray;\">&nbsp;{{project}}&nbsp;</span>\r\n        <button mat-button color=\"basic\" matTooltip=\"Load project\" (click)=\"loadProject(project)\" [disabled]=\"project === currentProject\">\r\n          <mat-icon>done</mat-icon>\r\n        </button>\r\n      </ng-container>          \r\n      </section>\r\n  </div>\r\n  <div fxFlex=\"5%\" fxLayoutAlign=\"end center space-around\">\r\n    <button mat-button color=\"basic\" matTooltip=\"Clear data\" (click)=\"clear()\">\r\n      <mat-icon>clear</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>","<ng-container *ngIf=\"currentProject && currentItem\">\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select link type</mat-label>\n        <mat-select [(value)]=\"selectedLinkType\">\n            <mat-option>None</mat-option>\n            <mat-option value=\"in\">in</mat-option>\n            <mat-option value=\"out\">out</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select domain</mat-label>\n        <mat-select [(value)]=\"selectedDomainProjectName\" (selectionChange)=\"projectChanged($event)\" >\n            <mat-option value=\"undefined\">None</mat-option>\n            <mat-option *ngFor=\"let project of domainProjects\" value=\"{{project.name}}\">{{project.name}}</mat-option>    \n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Select domain item</mat-label>\n        <mat-select [(value)]=\"selectedDomainProjectItemName\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let dataset of selectedDomainProject?.data?.datasets\" value=\"{{dataset.name}}\">{{dataset.name}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <button enabled=\"selectedLinkType != 'None'  && selectedDomainProject != 'None' && selectedDomainProjectItemName != 'None'\" mat-mini-fab color=\"basic\" matTooltip=\"Add link\" (click)=\"addLink()\">\n        <mat-icon>add</mat-icon>\n    </button>\n\n</ng-container>\n\n<mat-nav-list>\n    <mat-list-item *ngFor=\"let link of links?.domainLinks\">\n      <button mat-mini-fab color=\"basic\" matTooltip=\"Remove link\" (click)=\"deleteLink(link)\">\n        <mat-icon>remove</mat-icon>\n      </button>        \n      <label>{{link.dataset}}</label>\n      <span>&nbsp;</span>\n      <label>{{link.linkType}}</label>\n      <span>&nbsp;</span>\n      <label>{{link.domainProject}}</label>\n      <span>&nbsp;</span>\n      <label>{{link.domainItem}}</label>\n      <span>&nbsp;</span>      \n    </mat-list-item>    \n</mat-nav-list>","import { Component, Input, OnInit } from '@angular/core';\nimport { Project } from 'src/app/classes/project';\nimport { Topology } from 'src/app/classes/topology';\nimport { EventService } from 'src/app/services/events.service';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { TemplateService } from 'src/app/services/template.service';\n\n@Component({\n  selector: 'domain-link-component',\n  templateUrl: './domain-link-component.component.html',\n  styleUrls: ['./domain-link-component.component.css']\n})\nexport class DomainLinkComponentComponent implements OnInit {\n\n  _currentProject?: string = \"\";\n  _currentItem?: string = \"\";\n  links: any = undefined;\n\n  @Input() set currentProject(value: string | undefined) {    \n    this._currentProject = value;\n    this.inputChaged()\n  }  \n  get currentProject(): string | undefined {\n     return this._currentProject;\n  }\n\n  @Input() set currentItem(value: string) {    \n    this._currentItem = value;\n  }\n  get currentItem(): string {\n     return this._currentItem || \"\"; \n  }  \n\n  domainProjects?: Project[] = undefined;\n  selectedDomainProject?: Project = undefined;\n  selectedDomainProjectName: string = \"None\";\n  selectedDomainProjectItemName: string = \"None\";\n  selectedLinkType: string = \"None\";\n\n  constructor(private projectService: ProjectService, private templateService: TemplateService, private eventService: EventService) { \n    projectService.getProjects().subscribe(projects =>this.domainProjects = projects.filter(p=>p.domain == true))\n  }\n\n  selectProject(project: Project)  {\n    this.selectedDomainProject = project;\n    this.projectService.getProjectData(this.selectedDomainProject).subscribe(()=>{});\n  }\n\n  projectChanged(event: any) {\n    this.domainProjects?.filter(p => p.name == event.value)\n      .forEach(p => this.selectProject(p));\n  }\n\n  addLink() {\n    if(this._currentProject) {\n      let link = {linkType: this.selectedLinkType, dataset: this._currentItem, domainProject: this.selectedDomainProject?.name, domainItem: this.selectedDomainProjectItemName}\n      if(!this.links) {\n        this.links = {\"name\": this._currentProject, \"domainLinks\": []}\n      }\n      this.links.domainLinks.push(link)\n      this.projectService.saveProjectStat(this.links, this._currentProject, \"domainLinks\")\n    }\n  }\n\n  deleteLink(link: any) {\n    if(this._currentProject) {\n      let idx = this.links?.domainLinks?.indexOf(link)\n      if(idx !==  -1) {\n        this.links.domainLinks.splice(idx, 1)\n        let projectStat = this.links\n        this.projectService.saveProjectStat(projectStat, this._currentProject, \"domainLinks\")\n      }\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  inputChaged() {\n    this.links = undefined;\n    if(this._currentProject) {\n      this.projectService.loadProjectStat(this._currentProject, \"domainLinks\")\n      .subscribe(\n        res => this.links = (res as any).error ? undefined : res,\n        err => console.log('HTTP Error', err),\n        () => console.log('HTTP request completed.')\n      );      \n    }\n  }\n\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LocationStrategy, HashLocationStrategy} from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TopologyComponent } from './components/topology/topology.component';\r\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\r\nimport { AceEditorModule } from 'ngx-ace-editor-wrapper';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { FilesTreeComponent } from './components/files-tree/files-tree.component';\r\nimport { SourceCodeComponent } from './components/source-code/source-code.component';\r\nimport { TepmlateEditorComponent } from './components/tepmlate-editor/tepmlate-editor.component';\r\nimport { SelectTableComponent } from './components/select_table/select-table.component';\r\nimport { MainToolbarComponent } from './components/main-toolbar/main-toolbar.component';\r\nimport { MainLayoutComponent } from './components/main-layout/main-layout.component';\r\nimport { ProjectsComponent } from './components/projects/projects.component';\r\nimport { SelectedItemInspectorComponent } from './components/selected-item-inspector/selected-item-inspector.component';\r\nimport { SelectedItemInfoComponent } from './components/selected-item-info/selected-item-info.component';\r\nimport { TopologyGridViewComponent } from './components/topology-grid-view/topology-grid-view.component';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport 'material-icons/iconfont/material-icons.css';\r\nimport { DomainLinkComponentComponent } from './components/domain-link-component/domain-link-component.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopologyComponent,\r\n    FilesTreeComponent,\r\n    SourceCodeComponent,\r\n    TepmlateEditorComponent,\r\n    SelectTableComponent,\r\n    MainToolbarComponent,\r\n    MainLayoutComponent,\r\n    ProjectsComponent,\r\n    SelectedItemInspectorComponent,\r\n    SelectedItemInfoComponent,\r\n    TopologyGridViewComponent,\r\n    DomainLinkComponentComponent\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    NO_ERRORS_SCHEMA\r\n  ],  \r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgxGraphModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    ScrollingModule,\r\n    AceEditorModule,\r\n    FlexLayoutModule,\r\n    AgGridModule.withComponents([])\r\n  ],\r\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ProjectService } from './project.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SourceFilesService {\n  \n  constructor(private http: HttpClient, private projectService: ProjectService) { }\n\n  private getFolder(): string {\n    if(this.projectService.currentProject?.templateParams) {\n      const params: any = this.projectService.currentProject?.templateParams\n      return params.folder + \"/\"\n    }    \n    return \"\"\n  }\n\n  getSourceFileContent(fileName: string) {\n    let params = new HttpParams()\n      .set('fileName', this.getFolder() + fileName)\n    params.append(\"fileName\",  this.getFolder() + fileName)    \n    return this.http.get(\"/sourceFileContent\", { params })\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Project } from '../classes/project';\r\nimport { TemplateService } from './template.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EventService } from './events.service';\r\nimport { Dataset, Named, TopologyNode } from '../classes/dataset';\r\nimport { Topology } from '../classes/topology';\r\nimport { DomainProjectLinksSearchResult } from '../classes/domain';\r\nimport { NodeType } from '../classes/node';\r\nimport { ProjectsDataResponse, SearchApiResponse } from '../classes/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n\r\n  domainData?: Project[] = undefined;\r\n\r\n  currentProject?: Project = undefined;\r\n\r\n  queries = {\r\n    allDatasetProjectNames: {\r\n      \"selector\": {\r\n        \"$or\": [\r\n          {\"domain\": {\"$exists\": false}},\r\n          {\"domain\": {\"$ne\": true}}\r\n        ],\r\n        \"datasets\": {\r\n            \"$elemMatch\": {\r\n              \"name\": \"datasetName\"\r\n            }\r\n        }\r\n      },\r\n      \"fields\": [\"name\"],\r\n      \"limit\": 1000\r\n    },\r\n    allDatasetProjectsData: {\r\n      \"selector\": {\r\n        \"$or\": [\r\n          {\"domain\": {\"$exists\": false}},\r\n          {\"domain\": {\"$ne\": true}}\r\n        ],\r\n        \"datasets\": {\r\n            \"$elemMatch\": {\r\n              \"name\": \"datasetName\"\r\n            }\r\n        }\r\n      },\r\n      \"fields\": [\"name\", \"datasets\"],\r\n      \"limit\": 1000\r\n    },    \r\n    allLinksToDomainProject: {\r\n      \"selector\": {\r\n        \"domainLinks\": {\r\n            \"$elemMatch\": {\r\n              \"domainProject\": \"domainProject\"\r\n            }\r\n        }\r\n      },\r\n      \"fields\": [\r\n        \"name\",\r\n        \"domainLinks\"\r\n      ],\r\n      \"limit\": 1000\r\n    } \r\n}\r\n  \r\n  constructor(private http: HttpClient, private templateService: TemplateService, private eventService: EventService) { \r\n    eventService.projectNameEvent$.subscribe(value => {\r\n      this.getProject(value).subscribe(p =>{\r\n        if(p) {\r\n          this.loadProject(p)\r\n        }          \r\n      })\r\n    })\r\n  }\r\n\r\n  getProjects(): Observable<Project[]> {    \r\n    return this.http.get<Project[]>(\"/projectFile\")\r\n  }\r\n\r\n  getProject(name: string): Observable<Project | undefined> {\r\n    let p: Observable<Project | undefined> = this.getProjects()\r\n      .pipe(map((projects: Project[]) => projects.find(project => project.name === name)));\r\n    return p;\r\n  }\r\n\r\n  private processProjectData(project: Project): Observable<Project> {\r\n    if(project.domain == true) {\r\n      return this.getLinksToDomainProject(project.name)\r\n        .pipe(\r\n            map((links: DomainProjectLinksSearchResult) =>  {\r\n              console.log(links);\r\n              links.docs?.forEach(doc =>  {\r\n                doc.domainLinks?.forEach(link => {\r\n                  let found = project.data?.datasets.find(d=>d.name == link.domainItem);\r\n                  if(found) {\r\n                    let linked = new Dataset();\r\n                    linked.name = link.dataset || \"\";\r\n                    linked.project = doc.name || \"\";\r\n                    linked.datasetType = NodeType.linked;\r\n                    linked.in = []\r\n                    linked.out = []\r\n                    linked.layer = found.layer\r\n                    if(link.linkType == \"in\") {\r\n                      if(!found.in) {\r\n                        found.in = []\r\n                      }\r\n                      found.in.push(linked)\r\n                    }\r\n                    if(link.linkType == \"out\") {\r\n                      if(!found.out) {\r\n                        found.out = []\r\n                      }\r\n                      found.out.push(linked)\r\n                    }                    \r\n                  }\r\n                })\r\n              })\r\n              return project;\r\n            }));\r\n    }\r\n    return of(project);\r\n  }\r\n\r\n  loadProject(project: Project, clearAll: boolean = true) {\r\n    this.currentProject = project;\r\n    if(clearAll === true) {\r\n      this.eventService.emitClearAllEvent()\r\n    }\r\n    if(!project.data && !environment.singleHtml) {\r\n      this.eventService.emitSpinnerEvent(true)\r\n      this.templateService.renderTemplate(project.template, JSON.stringify(project.templateParams))\r\n        .subscribe((s: any) => {\r\n          project.data = s\r\n          this.processProjectData(project).subscribe(p => {\r\n            this.eventService.emitProjectEvent(p);\r\n            this.eventService.emitSpinnerEvent(false)\r\n          })\r\n        })\r\n    } else {\r\n      this.eventService.emitProjectEvent(project);\r\n    }\r\n  }\r\n  \r\n  getProjectsInputOutput(normalisedTopologyTree: TopologyNode[], project: string): TopologyNode {\r\n    let newNode = function(node: any) {\r\n      let ioNode = new Dataset()\r\n      ioNode.name = node.name\r\n      ioNode.nodeType = node.nodeType\r\n      ioNode.project = project\r\n      ioNode.out = []\r\n      ioNode.in = []\r\n      ioNode.datasetType = node.datasetType;\r\n      ioNode.layer = node.layer\r\n      return ioNode\r\n    }\r\n    let result = new Dataset()\r\n    result.name = project\r\n    result.nodeType = NodeType.project\r\n    result.project = project\r\n    result.datasetType = NodeType.project\r\n    result.layer = project\r\n    let inNodes: TopologyNode[] = []\r\n    let outNodes:  TopologyNode[] = []\r\n    normalisedTopologyTree.forEach(node => {\r\n      if(node.in.length === 0) {\r\n        inNodes.push(newNode(node))\r\n      }\r\n      if(node.out.length === 0) {\r\n        let nextDs = normalisedTopologyTree.find(d => d.in.find(i => i.name === node.name) != undefined)\r\n        if(!nextDs) {\r\n          outNodes.push(newNode(node))\r\n        }\r\n      }\r\n    })\r\n    result.in = inNodes\r\n    result.out = outNodes\r\n    this.saveProjectStat(result, project, \"inout\")\r\n    return result\r\n  }\r\n\r\n  saveProjectStat(projectStat: any, project: string, propsName: string) {\r\n    \r\n    this.getProject(project).subscribe(p=>{\r\n      if(p) {\r\n        projectStat.domain = p.domain\r\n        let params = new HttpParams()\r\n        .set('project', project)\r\n        .set('propsName', propsName)\r\n  \r\n        this.http.post<any>(\"/projectStat\", projectStat, {params})\r\n          .subscribe(s => console.log(s));\r\n      }\r\n    })\r\n  }\r\n\r\n  loadProjectStat(project: string, propsName: string) {\r\n    let params = new HttpParams()\r\n      .set('project', project)\r\n      .set('propsName', propsName)\r\n    return this.http.get(\"/projectStat\", { params })    \r\n  }\r\n\r\n  getProjectData(project: Project) {\r\n    return this.loadProjectStat(project.name, \"normalizedTree\").pipe(map(s=>{        \r\n      if(project) {\r\n        if(!project.data) {\r\n          project.data = new Topology();                         \r\n        }\r\n        project.data.datasets = (s as any).datasets;\r\n      }\r\n      return project;\r\n    }))\r\n  }  \r\n\r\n  getAllDatasetProjects(datasetName: string): Observable<SearchApiResponse> {\r\n    let q = JSON.parse(JSON.stringify(this.queries.allDatasetProjectNames))\r\n    q.selector.datasets.$elemMatch.name = datasetName\r\n    return this.search(q) as Observable<SearchApiResponse>\r\n  }\r\n\r\n  getInDatasets(tableName: string, tables: TopologyNode[], visited: string[] | undefined = undefined, pname: string = \"in\"): string[] {\r\n    if(!visited) {\r\n      visited = []\r\n    }\r\n    if(visited.indexOf(tableName) !== -1) {\r\n      return [];\r\n    }\r\n    visited.push(tableName)\r\n    let table: any = tables.find(d => d.name == tableName)\r\n    if(table) {\r\n      let io: Dataset[] | undefined = table[pname]\r\n      let intables: string[] = io?.map(d => d.name) || []\r\n      let res: string[]  = []\r\n      intables.forEach(t => res = res.concat(this.getInDatasets(t, tables, visited, pname) || []))\r\n      return Array.from(new Set(res.concat(intables)))\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  getUsageDatasets(tableName: string, tables: TopologyNode[]): string[] {\r\n    let usageTables: string[] = tables.filter(d => (d.in || []).map(i => i.name).concat((d.out || []).map(i => i.name)).includes(tableName)).map(i => i.name)\r\n    return usageTables\r\n  }  \r\n\r\n  buildDatasetVirtualProject(datasetName: string) {\r\n    this.eventService.emitClearAllEvent()\r\n    \r\n    let q = JSON.parse(JSON.stringify(this.queries.allDatasetProjectsData))\r\n    q.selector.datasets.$elemMatch.name = datasetName    \r\n    let resp = (this.search(q) as Observable<ProjectsDataResponse>)\r\n      .subscribe(res => {\r\n        let project = new Project()\r\n        project.data = new Topology()\r\n        project.data.datasets = []\r\n        let normalized: TopologyNode[] = []\r\n        project.name = datasetName        \r\n\r\n        res.docs.forEach(pd => {\r\n          /***********************************/\r\n/*          let pdd = pd.datasets.find(d=>d.name==datasetName)\r\n          if(pdd) {\r\n            let found = normalized.find(n=>n.name==datasetName)\r\n            if(!found) {\r\n              normalized.push(pdd)\r\n            } else {\r\n              //Неправильно! уже тут надо конструировать!\r\n              found.in = this.concatNamed(found.in, pdd.in);\r\n              found.out = this.concatNamed(found.out, pdd.out);      \r\n            }\r\n            found = normalized.find(n=>n.name==datasetName)\r\n            console.log(found)\r\n            let allin = this.getInDatasets(datasetName, pd.datasets)\r\n            let allout = this.getInDatasets(datasetName, pd.datasets, undefined, \"out\")    \r\n            console.log(allin)\r\n            console.log(allout)\r\n          }\r\n*/          \r\n          /***********************************/\r\n\r\n\r\n          pd.datasets.forEach(pdd=>{\r\n            let found = normalized.find(n=>n.name==pdd.name)\r\n            if(!found) {\r\n              normalized.push(pdd)\r\n            } else {\r\n              found.in = this.concatNamed(found.in, pdd.in);\r\n              found.in.forEach(d=>d.out=[])\r\n              found.out = this.concatNamed(found.out, pdd.out);\r\n              found.out.forEach(d=>d.in=[])\r\n            }\r\n          })\r\n        })\r\n        let allin = this.getInDatasets(datasetName, normalized)\r\n        let allout = this.getInDatasets(datasetName, normalized, undefined, \"out\")\r\n        let namesToExclude: string[] = []        \r\n        project.data.datasets = normalized\r\n          .filter(d=>d.name==datasetName || allin.indexOf(d.name) != -1 || allout.indexOf(d.name) != -1)\r\n          .map(d=>{\r\n            if(allin.indexOf(d.name) !== -1 && d.name !== datasetName) {\r\n              namesToExclude = namesToExclude.concat(d.out.map(dd=>dd.name))\r\n              d.out=[]\r\n              d.in=d.in.filter(i=>i.name==datasetName || allin.indexOf(i.name)!=-1)\r\n            }\r\n            if(allout.indexOf(d.name) !== -1 && d.name !== datasetName) {\r\n              namesToExclude = namesToExclude.concat(d.in.map(dd=>dd.name))\r\n              d.in=[]\r\n              d.out=d.out.filter(i=>i.name==datasetName || allout.indexOf(i.name)!=-1)\r\n            }\r\n            return d\r\n          })\r\n        project.data.datasets = project.data.datasets\r\n          .filter(d=>namesToExclude.indexOf(d.name) == -1 || d.name == datasetName)\r\n          .filter(d=>(d.out.length>0||d.in.length>0))\r\n        this.eventService.emitProjectEvent(project)\r\n      })\r\n  }\r\n\r\n  concatNamed<T extends Named>(list1: T[], list2: T[]): T[] {\r\n    list2.forEach(d2 => {\r\n      if(list1.find(d1  => d1.name == d2.name) == undefined) {\r\n        list1.push(JSON.parse(JSON.stringify(d2)));\r\n      }\r\n    })\r\n    return list1;\r\n  }  \r\n\r\n  normaizeTree(normalised: TopologyNode[],  datasets: TopologyNode[], level: number) {\r\n    datasets.forEach(dd => {\r\n      let found: TopologyNode | undefined = normalised.find(n => n.name == dd.name);      \r\n      if(found == undefined) {\r\n        normalised.push(JSON.parse(JSON.stringify(dd)));\r\n        this.normaizeTree(normalised, dd.in.concat(dd.out), level + 1);\r\n      } else {\r\n        let prev = found.in.length + found.out.length\r\n        found.in = this.concatNamed(found.in, dd.in);\r\n        found.out = this.concatNamed(found.out, dd.out);\r\n        if(dd instanceof Dataset && found instanceof Dataset) {\r\n          found.fields = this.concatNamed(found.fields || [], (dd as Dataset).fields || []);\r\n        }        \r\n        if((prev != found.in.length + found.out.length) || level === 0) {\r\n          this.normaizeTree(normalised, dd.in.concat(dd.out), level + 1);\r\n        }          \r\n      }            \r\n    })\r\n  }  \r\n\r\n  normalizeDataset(normalised: Dataset[], dataset: Dataset) {\r\n    dataset.out.forEach(out => {\r\n      let mainDs = normalised.find(d => d.name == out.name);\r\n      if(mainDs) {\r\n        if(!mainDs.in.find(i => i.name == dataset.name)) {\r\n          mainDs.in.push(JSON.parse(JSON.stringify(dataset)))\r\n        }\r\n      } else {\r\n        throw \"Not found main ds\"\r\n      }\r\n      out.in = []\r\n      out.out = []\r\n    })\r\n    dataset.in.forEach(inds => {\r\n      let mainDs = normalised.find(d => d.name == inds.name);\r\n      if(mainDs) {\r\n        if(!mainDs.out.find(i => i.name == dataset.name)) {\r\n          mainDs.out.push(JSON.parse(JSON.stringify(dataset)))\r\n        }\r\n      } else {\r\n        throw \"Not found main ds\"\r\n      }\r\n      inds.in = []\r\n      inds.out = []\r\n    })    \r\n  }  \r\n\r\n  getLinksToDomainProject(domainProject: string) { \r\n    let q = JSON.parse(JSON.stringify(this.queries.allLinksToDomainProject))    \r\n    q.selector.domainLinks.$elemMatch.domainProject = domainProject\r\n    return this.search(q)\r\n  }\r\n\r\n  search(query: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };    \r\n    return this.http.post(\"/find\", query, httpOptions)\r\n  }\r\n\r\n  getDomainData() {\r\n    if(!this.domainData) {\r\n       this.getProjects().subscribe(data => {\r\n              this.domainData = data.filter(p=>p.domain == true);\r\n              /*this.domainData.forEach(project => \r\n                this.templateService.renderTemplate(project.template, JSON.stringify(project.templateParams))\r\n                  .subscribe((s: any) => project.data = s)\r\n              );*/\r\n              this.eventService.emitDomainListEvent(this.domainData);\r\n        });\r\n    } else {\r\n      this.eventService.emitDomainListEvent(this.domainData);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Topology } from \"./topology\";\r\n\r\nexport class Project {\r\n  name!: string;\r\n  template!: string;\r\n  templateParams?: string;\r\n  data?: Topology;\r\n  enable?: boolean = true;\r\n  domain?: boolean = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TemplateFile } from '../classes/tempates';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TemplateService {\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveTemplate(template: TemplateFile): Observable<TemplateFile> {\r\n    return this.http.post<TemplateFile>(\"/template\", template)\r\n  }\r\n\r\n  renderTemplate(fileName: string, templateParams?: string) {\r\n    let params = new HttpParams()\r\n      .set('fileName', fileName).set('params', templateParams || \"{}\")\r\n    params.append(\"fileName\", fileName)\r\n    if(templateParams) {\r\n      params.append(\"params\", templateParams)\r\n    }    \r\n    return this.http.get(\"/renderTemplate\", { params })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Field, TopologyNode } from 'src/app/classes/dataset';\r\nimport { EventService } from 'src/app/services/events.service';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { SourceFilesService } from 'src/app/services/files.service';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\n\r\n@Component({\r\n  selector: 'selected-item-inspector',\r\n  templateUrl: './selected-item-inspector.component.html',\r\n  styleUrls: ['./selected-item-inspector.component.css']\r\n})\r\nexport class SelectedItemInspectorComponent implements OnInit {\r\n\r\n  selected: any;\r\n  selectedNodeProject: string | undefined;\r\n  currentProject: string | undefined;  \r\n\r\n  treeControl = new NestedTreeControl<Field>(node => node.sources);\r\n\r\n  dataSource = new MatTreeNestedDataSource<Field>();\r\n\r\n  constructor(private eventService: EventService, private sourceFilesService: SourceFilesService, \r\n    private projectService: ProjectService) {\r\n    eventService.nodeSelectedEvent$.subscribe(value => {\r\n      this.selected = value;\r\n      this.dataSource.data = this.selected?.data?.dataset?.fields;\r\n      this.eventService.emitGetGetSelectedNodeProjectEvent(value);\r\n    })\r\n    eventService.returnSelectedNodeProjectEvent$.subscribe(value => {\r\n      this.selectedNodeProject = value\r\n    })\r\n    this.eventService.clearAllEvent$.subscribe(value => {\r\n      this.selected = undefined;\r\n      this.selectedNodeProject = undefined;\r\n    })\r\n    this.eventService.projectEvent$.subscribe(value => {\r\n      this.currentProject = value.name;\r\n    })\r\n  }\r\n\r\n  hasChild = (_: number, node: Field) => !!node.sources && node.sources.length > 0;\r\n\r\n  loadProject(project: string | undefined) {\r\n    if(project) {\r\n      this.eventService.emitProjectNameEvent(project)\r\n    }    \r\n  }\r\n\r\n  filterByTableIn(tableName: string | undefined) {\r\n    if(tableName) {\r\n      this.eventService.emitFilterByTableInEvent(tableName);\r\n    }    \r\n  }\r\n  filterByTableUsage(tableName: string | undefined) {\r\n    if(tableName) {\r\n      this.eventService.emitFilterByTableUsageEvent(tableName);\r\n    }    \r\n  }\r\n  filterByProject(project: string | undefined) {\r\n    if(project) {\r\n      this.eventService.emitFilterByProjectEvent(project);\r\n    }    \r\n  }  \r\n  clearProjectFilter() {\r\n    this.eventService.emitClearProjectFilterEvent();\r\n  }  \r\n\r\n  clearTableFilter() {\r\n    this.eventService.emitClearTableFilterEvent();\r\n  }\r\n\r\n  getType() {\r\n      return this.selected?.data?.dataset?.datasetType;\r\n  }\r\n\r\n  getSource() {\r\n    return this.selected?.data?.dataset?.sourceFile;    \r\n  }\r\n\r\n  getAction() {\r\n    return this.selected?.data?.dataset?.action;    \r\n  }\r\n\r\n  getSourceFile() {\r\n    this.sourceFilesService.getSourceFileContent(this.selected.data?.dataset?.sourceFile)    \r\n      .subscribe(\r\n        fileContent => {\r\n          alert(fileContent)\r\n        },\r\n        error => alert(error.message)\r\n      )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  selectTable(value: string|undefined) {\r\n    this.eventService.emitTableSelectedEvent(value)\r\n  }  \r\n\r\n}\r\n","<mat-tab-group>\r\n  <mat-tab label=\"Props\">\r\n    <mat-nav-list>\r\n\r\n        <mat-list-item *ngIf=\"selected\">\r\n          <label>{{selected?.data?.dataset?.name}}</label>\r\n          <span>&nbsp;</span>\r\n          <button mat-mini-fab color=\"basic\" matTooltip=\"Filter. Show this object lineage\" (click)=\"filterByTableIn(selected?.data?.dataset?.name)\">\r\n            <mat-icon>done</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab color=\"basic\" matTooltip=\"Filter. Show object usage\" (click)=\"filterByTableUsage(selected?.data?.dataset?.name)\">\r\n            <mat-icon>filter_alt</mat-icon>\r\n          </button>                    \r\n          <button mat-mini-fab color=\"basic\" matTooltip=\"Clear filter\" (click)=\"clearTableFilter()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>      \r\n        </mat-list-item>\r\n        <mat-list-item>        \r\n          <label>Type:</label>\r\n          <label>{{getType()}}</label>\r\n        </mat-list-item>\r\n        <mat-list-item *ngIf=\"getAction() != undefined\">\r\n          <label>Action:</label>\r\n          <label>{{getAction()}}</label>\r\n        </mat-list-item>    \r\n        <mat-list-item *ngIf=\"selectedNodeProject != undefined\">{{selectedNodeProject}}\r\n          <span>&nbsp;</span>\r\n          <button mat-mini-fab color=\"basic\"  matTooltip=\"Load this project\" (click)=\"loadProject(selectedNodeProject)\">\r\n            <mat-icon>done</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab color=\"basic\" matTooltip=\"Filter diagram by this project\" (click)=\"filterByProject(selectedNodeProject)\">\r\n            <mat-icon>filter_alt</mat-icon>\r\n          </button>                    \r\n          <button mat-mini-fab color=\"basic\" matTooltip=\"Clear filter\" (click)=\"clearProjectFilter()\">\r\n            <mat-icon>clear</mat-icon>\r\n          </button>          \r\n        </mat-list-item>\r\n\r\n        <mat-list-item>        \r\n            <textarea *ngIf=\"selected\" disabled>{{getSource()}}</textarea>\r\n<!--            \r\n            <button mat-mini-fab color=\"basic\" (click)=\"getSourceFile()\" *ngIf=\"selected\">\r\n              <mat-icon>text_snippet</mat-icon>\r\n            </button>\r\n-->            \r\n        </mat-list-item>\r\n\r\n    </mat-nav-list>\r\n  </mat-tab>\r\n  <mat-tab label=\"Fields ({{selected?.data?.dataset?.fields?.length}})\">\r\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\r\n      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>          \r\n          <button mat-icon-button matTreeNodeToggle>\r\n            <mat-icon class=\"mat-icon-rtl-mirror\">\r\n              code\r\n            </mat-icon>          \r\n          </button>\r\n          {{node.name}}\r\n      </mat-tree-node>\r\n      <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\r\n          <div class=\"mat-tree-node\">\r\n            <button mat-icon-button matTreeNodeToggle\r\n                    [attr.aria-label]=\"'Toggle ' + node.name\">\r\n              <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n              </mat-icon>\r\n            </button>\r\n            {{node.name}}\r\n          </div>\r\n          <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\"\r\n              role=\"group\">\r\n            <ng-container matTreeNodeOutlet></ng-container>\r\n        </div>\r\n      </mat-nested-tree-node>\r\n    </mat-tree>\r\n  </mat-tab>\r\n</mat-tab-group>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProjectFileDir } from 'src/app/classes/topology';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\n\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  data: ProjectFileDir\n}\n\n@Component({\n  selector: 'files-tree',\n  templateUrl: './files-tree.component.html',\n  styleUrls: ['./files-tree.component.css']\n})\nexport class FilesTreeComponent implements OnInit {\n\n  @Input()\n  filesTree?: ProjectFileDir[]\n\n  private _transformer = (node: ProjectFileDir, level: number) => {\n    return {\n      expandable: !!node.childDirs && node.childDirs.length > 0,\n      name: node.name,\n      level: level,\n      data: node\n    };\n  }  \n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(\n      this._transformer, node => node.level, node => node.expandable, node => node.childDirs); \n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() { \n    this.filesTree = []\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  ngOnInit(): void {\n    if(this.filesTree) {\n      this.dataSource.data = this.filesTree;\n    } else {\n      this.dataSource.data = []\n    }\n    \n  }\n\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n      <!-- use a disabled button to provide padding for tree leaf -->\n      <button mat-icon-button disabled></button>\n      {{node.name}}\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n      <button mat-icon-button matTreeNodeToggle\n              [attr.aria-label]=\"'Toggle ' + node.name\">\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n        </mat-icon>\n      </button>\n      {{node.name}}\n    </mat-tree-node>\n  </mat-tree>\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-source-code',\n  templateUrl: './source-code.component.html',\n  styleUrls: ['./source-code.component.css']\n})\nexport class SourceCodeComponent implements OnInit {\n\n  @Input()\n  codeValue: string = \"\";\n  @ViewChild('editor') editor: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ace-editor\n[(text)]=\"codeValue\"\n #editor style=\"height:600px;\">\n</ace-editor>\n","import { Component, OnInit } from '@angular/core';\nimport { Dataset } from 'src/app/classes/dataset';\nimport { EventService } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'topology-grid-view',\n  templateUrl: './topology-grid-view.component.html',\n  styleUrls: ['./topology-grid-view.component.css']\n})\nexport class TopologyGridViewComponent implements OnInit {\n\n   withFields = true;\n   gridApi: any;\n   gridColumnApi: any;\n\n   defaultColDef: any;\n   popupParent: any;\n   columnDefs: any = [\n    { field: 'database', resizable: true, filter: 'agTextColumnFilter', },\n    { field: 'tableName', resizable: true, filter: 'agTextColumnFilter', },\n    { field: 'fieldName', resizable: true, filter: 'agTextColumnFilter', }\n  ];  \n\n  rowData: any = [\n    { database: '', tableName: '', fieldName: '' }\n  ];\n\n  tables: (Dataset|undefined)[] = [];\n  constructor(private eventService: EventService) { \n    this.defaultColDef = {\n      editable: true,\n      resizable: true,\n      minWidth: 100,\n      flex: 1,\n    };\n\n    this.popupParent = document.body;\n    eventService.tableListEvent$.subscribe(value => {\n      this.tables =value;\n      this.setData()\n    })\n  }\n\n  setData() {\n    let data: {}[] = []\n    this.tables.sort((a,b)=> a?.name.localeCompare(b?.name || \"\") || 0).forEach(d => {\n      const names = (d?.name || \"\").split(\".\");\n      const database: string = names.length > 0 ? names[0] : \"\"\n      const tableName: string = (database !== \"\" ? d?.name.replace(database + \".\", \"\") : d?.name) || \"\";\n      if(d?.fields && this.withFields === true) {\n        d.fields.sort((a, b) => a.name.localeCompare(b.name)).forEach(f => {\n          if(!f.name.includes(\".\")) {\n            data.push({\"database\": database, \"tableName\": tableName, \"fieldName\": f.name});\n          }          \n        })        \n      }       \n      data.push({\"database\": database, \"tableName\": tableName, \"fieldName\": \"\"});            \n    });\n    this.rowData = data;\n  }\n\n  onGridReady(params: any) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  \n  onBtnExport() {\n    this.gridApi.exportDataAsCsv({columnSeparator: \";\"});\n  }\n\n  ngOnInit(): void {\n  }\n\n  setWithFields(withFields: boolean) {\n    this.withFields = withFields;\n    this.setData();\n  }\n\n}\n","\n<mat-checkbox class=\"example-margin\"\n    [checked]=\"withFields\"\n    (change)=\"setWithFields($event.checked)\"\n    color=\"primary\">\n    With fields\n</mat-checkbox>\n&nbsp;\n<button (click)=\"onBtnExport()\">Export</button>\n<ag-grid-angular\n    #agGrid\n    style=\"width: 100%; height: 100%;\"\n    style=\"width: 1000px; height: 800px;\"\n    class=\"ag-theme-alpine\"\n    [rowData]=\"rowData\"\n    [columnDefs]=\"columnDefs\"\n    [popupParent]=\"popupParent\"\n    [columnDefs]=\"columnDefs\"    \n    (gridReady)=\"onGridReady($event)\">\n</ag-grid-angular>","import { Dataset, Field, TopologyNode } from \"./dataset\"\r\nimport { Tool, ToolAction } from \"./toolAction\"\r\n\r\nexport class ProjectFileDir {\r\n  project: string = \"\"\r\n  name: string = \"\"\r\n  childDirs?: ProjectFileDir[]\r\n  isFile: boolean = false\r\n  fileContent: string = \"\"\r\n}\r\n\r\nexport class Topology {\r\n  tools!: Tool[]\r\n  actions: ToolAction[] = []\r\n  datasets!: Dataset[]\r\n  projectFiles?: ProjectFileDir[]\r\n  fields?: Field[] \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Node, NodeData } from \"../classes/node\";\r\nimport { Project } from '../classes/project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService { \r\n  constructor() { }\r\n\r\n  private clearAllEventSource = new Subject<boolean>();\r\n  clearAllEvent$ = this.clearAllEventSource.asObservable();\r\n  emitClearAllEvent() {\r\n    this.clearAllEventSource.next(true);\r\n  }\r\n\r\n  private zoomToFitEventSource = new Subject<boolean>();\r\n  zoomToFitEvent$ = this.zoomToFitEventSource.asObservable();\r\n  emitZoomToFitEvent() {\r\n    this.zoomToFitEventSource.next(true);\r\n  }  \r\n\r\n  private nodeSelectedEventSource = new Subject<Node>();\r\n  nodeSelectedEvent$ = this.nodeSelectedEventSource.asObservable();\r\n  emitNodeSelectedEvent(node: Node) {\r\n    this.nodeSelectedEventSource.next(node);\r\n  }\r\n\r\n  private getSelectedNodeProjectEventSource = new Subject<Node>();\r\n  getSelectedNodeProjectEvent$ = this.getSelectedNodeProjectEventSource.asObservable();\r\n  emitGetGetSelectedNodeProjectEvent(node: Node) {\r\n    this.getSelectedNodeProjectEventSource.next(node);\r\n  }\r\n\r\n  private returnSelectedNodeProjectEventSource = new Subject<string | undefined>();\r\n  returnSelectedNodeProjectEvent$ = this.returnSelectedNodeProjectEventSource.asObservable();\r\n  emitReturnSelectedNodeProjectEvent(projects: string | undefined) {\r\n    this.returnSelectedNodeProjectEventSource.next(projects);\r\n  }\r\n\r\n  private joinDataEventSource = new Subject<any>();\r\n  joinDataEvent$ = this.joinDataEventSource.asObservable();\r\n  emitJoinDataEvent(data: any) {\r\n    this.joinDataEventSource.next(data);\r\n  }\r\n\r\n  private projectEventSource = new Subject<Project>();\r\n  projectEvent$ = this.projectEventSource.asObservable();\r\n  emitProjectEvent(data: Project) {\r\n    this.projectEventSource.next(data);\r\n  }\r\n\r\n  private projectNameEventSource = new Subject<string>();\r\n  projectNameEvent$ = this.projectNameEventSource.asObservable();\r\n  emitProjectNameEvent(data: any) {\r\n    this.projectNameEventSource.next(data);\r\n  }  \r\n\r\n  private tableListEventSource = new Subject<any[]>();\r\n  tableListEvent$ = this.tableListEventSource.asObservable();\r\n  emitTableListEvent(list: any[]) {\r\n    this.tableListEventSource.next(list);\r\n  }\r\n\r\n  private tableSelectedEventSource = new Subject<string|undefined>();\r\n  tableSelectedEvent$ = this.tableSelectedEventSource.asObservable();\r\n  emitTableSelectedEvent(value: string|undefined) {\r\n    this.tableSelectedEventSource.next(value);\r\n  }  \r\n\r\n  private spinnerEventSource = new Subject<boolean>();\r\n  spinnerEvent$ = this.spinnerEventSource.asObservable();\r\n  emitSpinnerEvent(value: boolean) {\r\n    this.spinnerEventSource.next(value);\r\n  }\r\n\r\n  private wideLayoutEventSource = new Subject<boolean>();\r\n  wideLayoutEvent$ = this.wideLayoutEventSource.asObservable();\r\n  emitWideLayoutEvent(value: boolean) {\r\n    this.wideLayoutEventSource.next(value);\r\n  }\r\n\r\n  private narrowLayoutEventSource = new Subject<boolean>();\r\n  narrowLayoutEvent$ = this.narrowLayoutEventSource.asObservable();\r\n  emitNarrowLayoutEvent(value: boolean) {\r\n    this.narrowLayoutEventSource.next(value);\r\n  }  \r\n\r\n  private centerTopologyEventSource = new Subject<boolean>();\r\n  centerTopologyEvent$ = this.centerTopologyEventSource.asObservable();\r\n  emitCenterTopologyEvent() {\r\n    this.centerTopologyEventSource.next(true);\r\n  }\r\n\r\n  private toggleClustersEventSource = new Subject<boolean>();\r\n  toggleClustersEvent$ = this.toggleClustersEventSource.asObservable();\r\n  emitToggleClustersEvent() {\r\n    this.toggleClustersEventSource.next(true);\r\n  }  \r\n\r\n  private toggleViewEventSource = new Subject<string>();\r\n  toggleViewEvent$ = this.toggleViewEventSource.asObservable();\r\n  emitToggleViewEvent(value: string) {\r\n    this.toggleViewEventSource.next(value);\r\n  }  \r\n\r\n  private filterByTableInEventSource = new Subject<string>();\r\n  filterByTableInEvent$ = this.filterByTableInEventSource.asObservable();\r\n  emitFilterByTableInEvent(tableName: string) {\r\n    this.filterByTableInEventSource.next(tableName);\r\n  }\r\n\r\n  private filterByTableUsageEventSource = new Subject<string>();\r\n  filterByTableUsageEvent$ = this.filterByTableUsageEventSource.asObservable();\r\n  emitFilterByTableUsageEvent(tableName: string) {\r\n    this.filterByTableUsageEventSource.next(tableName);\r\n  }\r\n\r\n  private filterByProjectEventSource = new Subject<string>();\r\n  filterByProjectEvent$ = this.filterByProjectEventSource.asObservable();\r\n  emitFilterByProjectEvent(project: string) {\r\n    this.filterByProjectEventSource.next(project);\r\n  }  \r\n\r\n  private clearProjectFilterEventSource = new Subject<boolean>();\r\n  clearProjectFilterEvent$ = this.clearProjectFilterEventSource.asObservable();\r\n  emitClearProjectFilterEvent() {\r\n    this.clearProjectFilterEventSource.next(true);\r\n  }  \r\n  \r\n  private clearTableFilterEventSource = new Subject<boolean>();\r\n  clearTableFilterEvent$ = this.clearTableFilterEventSource.asObservable();\r\n  emitClearTableFilterEvent() {\r\n    this.clearTableFilterEventSource.next(true);\r\n  }\r\n\r\n  private domainListEventSource = new Subject<Project[]>();\r\n  domainListEvent$ = this.domainListEventSource.asObservable();\r\n  emitDomainListEvent(list: Project[]) {\r\n    this.domainListEventSource.next(list);\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TopologyComponent } from './components/topology/topology.component';\nimport { MainLayoutComponent } from './components/main-layout/main-layout.component';\n\nconst routes: Routes = [\n  //{ path: '', redirectTo: '/topoloy', pathMatch: 'full' },\n  //{ path: '', component: TopologyComponent },  \n  { path: '', component: MainLayoutComponent },  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}