{"version":3,"sources":["./src/app/components/tepmlate-editor/tepmlate-editor.component.ts","./src/app/components/tepmlate-editor/tepmlate-editor.component.html","./src/app/components/main-layout/main-layout.component.ts","./src/app/components/main-layout/main-layout.component.html","./src/app/components/projects/projects.component.html","./src/app/components/projects/projects.component.ts","./src/app/components/topology/topology.component.ts","./src/app/components/topology/topology.component.html","./src/app/classes/node.ts","./src/environments/environment.ts","./src/app/components/select_table/select-table.component.ts","./src/app/components/select_table/select-table.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/main-toolbar/main-toolbar.component.html","./src/app/components/main-toolbar/main-toolbar.component.ts","./src/app/app.module.ts","./src/app/services/project.service.ts","./src/app/services/template.service.ts","./src/app/components/files-tree/files-tree.component.ts","./src/app/components/files-tree/files-tree.component.html","./src/app/components/source-code/source-code.component.ts","./src/app/components/source-code/source-code.component.html","./src/app/classes/topology.ts","./src/app/services/events.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { EventService } from 'src/app/services/events.service';\nimport { TemplateService } from 'src/app/services/template.service';\n\n@Component({\n  selector: 'tepmlate-editor',\n  templateUrl: './tepmlate-editor.component.html',\n  styleUrls: ['./tepmlate-editor.component.css']\n})\nexport class TepmlateEditorComponent implements OnInit {\n  fileName?: string;\n  params?: string;\n  fileContent: any;\n  @ViewChild('templateEditor') editor: any;\n  \n  constructor(private teplateService: TemplateService, private eventService: EventService) { \n    eventService.projectEvent$.subscribe(value => {\n      this.fileName = value.template\n      this.params = JSON.stringify(value.templateParams)\n      this.fileContent = JSON.stringify(value.data || {}, null, 4)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  setData() {\n    this.eventService.emitJoinDataEvent(JSON.parse(this.fileContent))\n  }\n\n  renderTemplate() {\n    if(this.fileName) {\n      this.teplateService.renderTemplate(this.fileName, this.params)\n        .subscribe(s => {\n          this.fileContent = JSON.stringify(s, null, 4)\n          this.eventService.emitJoinDataEvent(s)\n        }, error => {        \n          console.log(\"Error while parse template!\")\n          console.log(error)\n          this.fileContent = error.error.text;\n        })\n    }\n  }\n\n}\n","<button mat-icon-button aria-label=\"Render\" (click)=\"renderTemplate()\">\n  <mat-icon>cake</mat-icon>\n</button>\n<input type=\"text\" [(ngModel)]=\"fileName\">\n<input type=\"params\" [(ngModel)]=\"params\">\n<button mat-icon-button aria-label=\"Set data\" (click)=\"setData()\">\n  <mat-icon>done</mat-icon>\n</button>\n\n<ace-editor\n[(text)]=\"fileContent\"\n #templateEditor style=\"height:600px;\">\n</ace-editor>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TopologyComponent } from '../topology/topology.component'\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  @ViewChild(TopologyComponent)\n  private topologyComponent!: TopologyComponent;\n\n  constructor() { }\n\n  zoomToFit() {\n    this.topologyComponent.zoomToFit();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"row\">\n  <app-main-toolbar></app-main-toolbar>\n</div>\n<div fxLayout=\"row\">\n    <div fxFlex=\"20%\" style=\"overflow: auto;height: 90vh;\">\n      <select-table></select-table>\n    </div>\n    <div fxFlex=\"5px\" style=\"background-color: gray;\">\n    </div>\n    <div fxFlex=\"80%\" style=\"overflow: auto;height: 90vh;\">\n      <mat-tab-group>\n        <mat-tab label=\"Topology\">  \n          <app-topology></app-topology>      \n        </mat-tab>      \n        <mat-tab label=\"Templates\">\n          <tepmlate-editor></tepmlate-editor>\n        </mat-tab>\n        <mat-tab label=\"Projects\">\n          <app-projects></app-projects>\n        </mat-tab>\n      </mat-tab-group>      \n    </div>\n  </div>","<mat-list>\n        <mat-list-item *ngFor=\"let project of projects\">\n        <p matLine>\n            <b>{{project.name}}</b>\n        </p>\n        <p matLine>\n            {{project.template}}\n        </p>\n        <p matLine>\n            {{object2str(project.templateParams || {})}}\n        </p>\n        \n\n            <div class=\"button-container\">\n                <button mat-mini-fab color=\"primary\" (click)=\"loadProject(project)\">\n                    <mat-icon>content_paste</mat-icon>\n                </button>\n            </div>\n            <div class=\"button-container\">\n                <button mat-mini-fab color=\"primary\" (click)=\"loadProject(project, false)\">\n                    <mat-icon>add_circle_outline</mat-icon>\n                </button>\n            </div>\n            <mat-divider></mat-divider>\n        </mat-list-item>\n        \n  </mat-list>\n","import { Component, OnInit } from '@angular/core';\nimport { Project } from 'src/app/classes/project';\nimport { EventService } from 'src/app/services/events.service';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { TemplateService } from 'src/app/services/template.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects?: Project[]\n  constructor(private projectService: ProjectService, private templateService: TemplateService, private eventService: EventService) { \n    projectService.getProjects().subscribe(value => {\n      this.projects = value;\n    })\n  }\n\n  loadProject(project: Project, clearAll: boolean = true) {\n    this.projectService.loadProject(project, clearAll)\n  }\n\n  object2str(value: any): string {\n    return JSON.stringify(value)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { EventService } from \"../../services/events.service\";\nimport { ProjectFileDir, Topology } from \"../../classes/topology\";\nimport { Node, NodeData } from \"../../classes/node\";\nimport { Dataset } from '../../classes/dataset';\nimport { Subject } from 'rxjs';\nimport { jsPDF } from 'jspdf'\nimport 'svg2pdf.js'\nimport { Svg2pdfOptions } from 'svg2pdf.js';\n\n//var saveSvgAsPng = import(\"save-svg-as-png\")\n\ninterface KeyValuePair {\n  key: string;\n  value: string;\n}\n\n@Component({\n  selector: 'app-topology',\n  templateUrl: './topology.component.html',\n  styleUrls: ['./topology.component.css']\n})\nexport class TopologyComponent implements OnInit {\n\n  @ViewChild('editor') editor: any;\n  text: string = \"<test><order>PO001</order>\\r\\n<messgeID>1124</messageID></test>\";\n  \n  setEditorContent(event: any) {\n    // console.log(event, typeof event);\n    console.log(\"\");\n  }\n\n  saveGraph() {\n    const doc = new jsPDF()\n\n    const svgatt = document.getElementsByTagName(\"svg\")\n    const o: Svg2pdfOptions = {x: 0, y: 0, width: 1500, height: 2500, loadExternalStyleSheets: true}\n\n    const element = svgatt[0]\n    if(element) {\n      const x = 0\n      const y = 0\n      const width = 1500\n      const height = 2500\n      doc\n      .svg(element, o)\n      .then(() => {\n        doc.save('myPDF.pdf')\n      })\n    }\n  }\n\n  clusters: any[] = []\n  nodes: Node[] = []\n  links: any[] = []\n  projects: string[] = []\n  selectedProject: string = \"\"\n  selectedTable: string = \"\"\n  error: any;\n  selected: Node | undefined;\n  data: Topology | undefined;\n  codeValue: any = \"<a>aa</a>\"\n\n  getNodeProjects(node: Node): (string | undefined)[] | undefined {\n    //return this.data?.datasets.filter(d => d.name == node.data?.dataset.name).map(d => d.project)\n    return this.nodes.map(n => n.data?.dataset).filter(d => d && d.name == node.data?.dataset.name).map(d => d?.project)\n  }\n\n  getTables(): string[] {\n    let res: string[] = []\n    if(this.nodes) {\n      res = this.nodes.map(n => n.data?.dataset.name||\"\")\n    }\n    return res;    \n  }\n\n  zoomToFit$: Subject<boolean> = new Subject();\n  \n  constructor(\n    private eventService: EventService, \n    public cd: ChangeDetectorRef) { \n    eventService.zoomToFitEvent$.subscribe(value => this.zoomToFit());\n\n    eventService.getSelectedNodeProjectEvent$.subscribe(node => \n      eventService.emitReturnSelectedNodeProjectEvent(this.getNodeProjects(node)));\n    \n    eventService.projectSelectedEvent$.subscribe(value => {\n      if(this.data) {\n        this.getData(this.data, value)          \n      }\n    })\n\n    eventService.clearAllEvent$.subscribe(value => this.clear())\n    eventService.joinDataEvent$.subscribe(value => this.addData(value))\n    eventService.projectEvent$.subscribe(value => this.addData(value.data || new Topology()))\n    eventService.tableSelectedEvent$.subscribe(value => { \n      let found = this.nodes.find(node => node.data?.dataset?.name === value);\n      if(found) {\n        this.nodeClick(found)\n      }\n    })\n  }\n\n  zoomToFit() {\n    this.zoomToFit$.next(true)\n  }  \n\n  checkCluster(layer: string, nodeName: string, clusters: any[], tablesId: KeyValuePair[]) {\n    let cluster: any = clusters.find((c: any) => c.label == layer)\n    if(!cluster) {\n      cluster = {id: layer, label: layer, childNodeIds: []}\n      if(cluster.label == \"Hive\"){\n        cluster.data = {image: \"assets/Apache_Hive_logo.svg\"}\n      }\n      if(cluster.label == \"Oracle\"){\n        cluster.data = {image: \"assets/oracle-2.svg\"}\n      }      \n      if(cluster.label == \"DataMart\"){\n        cluster.data = {image: \"assets/datamart.png\"}\n      }      \n      clusters.push(cluster)\n    }\n    cluster.childNodeIds.push(tablesId.find(k => k.key == nodeName)?.value)\n  }\n  \n  findFileContent(dirs: ProjectFileDir[] | undefined, project: string | undefined, fileName: string | undefined): ProjectFileDir | undefined {\n    let found: ProjectFileDir | undefined = undefined\n    if(dirs) {\n      found = dirs.find(d => d.project == project && d.isFile == true && d.name == fileName)\n      if(!found) {\n        for(let d of dirs) {\n          found = this.findFileContent(d.childDirs, project, fileName)\n          if(found) {\n            break\n          }        \n        }\n      }    \n    }\n    return found\n  }\n\n  nodeClick(node: Node) {\n    this.selected = node\n    this.eventService.emitNodeSelectedEvent(node)\n    this.cd.detectChanges()\n  }\n\n  checkIfSelected(node: Node) {\n    return node == this.selected\n  }\n\n  clear() {\n    let t = new Topology()\n    t.datasets = []\n    this.getData(t)\n  }\n\n  addData(data: Topology) {\n    let t = new Topology()\n    t.datasets = (this.data?.datasets || []).concat(data.datasets || [])\n    this.getData(t)\n  }\n\n  getData(data: Topology, project: any = null) {\n    this.data = data;\n    this.selected = undefined;\n    console.log(data);\n    \n    let inodes: Dataset[] = []\n    inodes = inodes.concat(data.datasets)\n    data.datasets.forEach(dd => {\n      dd.in.concat(dd.out).forEach(i => {\n        if(inodes.filter(n => n.name == i.name).length == 0) {\n          inodes.push(i);\n        }\n      })\n    })\n    let p: string[] = inodes.map(n=>n.project ? n.project : \"Empty\")\n    this.projects = [\"\", ...new Set(p)];\n    this.eventService.emitReceiveProjectsEvent(this.projects)\n    this.selectedProject = this.projects.length > 0 ? this.projects[0] : \"\"\n\n    let did: number = 0\n    let tablesId: KeyValuePair[] = inodes.map(d =>  {return { key: d.name, value: \"\" + ++did }} )\n    \n    let linkid: number = 0\n    let links: any[] = []\n    let clusters: any[] = []\n    data.datasets.forEach(d => {\n      if(project == null || project == \"\" || project == d.project) {\n        this.checkCluster(d.layer, d.name, clusters, tablesId)\n      }\n      \n      let inlinks = d.in.map(l => { \n        if(project == null || project == \"\" || project == l.project) {\n          this.checkCluster(l.layer, l.name, clusters, tablesId);\n        }\n        return {\"id\": \"\"+ ++linkid,\"source\": tablesId.find(k => k.key == l.name)?.value, \"target\": tablesId.find(k => k.key == d.name)?.value}\n      });\n      links = links.concat(inlinks);\n      let outlinks = d.out.map(l => { \n        if(project == null || project == \"\" || project == l.project) {\n          this.checkCluster(l.layer, l.name, clusters, tablesId);\n        }\n        return {\"id\": \"\"+ ++linkid, \"source\": tablesId.find(k => k.key == d.name)?.value, \"target\": tablesId.find(k => k.key == l.name)?.value}\n      });\n      links = links.concat(outlinks);      \n    })\n\n    this.nodes = inodes.filter(d => {\n      return (project == null || project == \"\") \n      || d.project == project \n      || data.datasets.find(fd => fd.name == d.name && fd.project == project) != null\n      || (data.datasets.find(f => f.in.filter(td => td.name == d.name && td.project == project).length > 0) != null) \n      || (data.datasets.find(f => f.out.filter(td => td.name == d.name && td.project == project).length > 0) != null)\n      || this.checkIfLinkInProject(d, links, data, tablesId, project);\n    })\n      .map(d => new Node(\n        tablesId.find(k => k.key == d.name)?.value || \"notfoundid\", d.name, \n        new NodeData(\"assets/dataset.ico\", \"#a95963\", d)\n      ))\n    this.links = links.filter(l => this.nodes.filter(n => n.id == l.source || n.id == l.target).length > 0)\n    this.clusters = clusters;\n    this.eventService.emitTableListEvent(this.getTables())\n  }\n\n  checkIfLinkInProject(dataset: Dataset, links: any[], data: Topology, tablesId: any[], project: string) {\n    let did = tablesId.find(t => t.key == dataset.name).value\n    let dlinks = links.filter(l => l.source == did || l.target == did)\n    return dlinks.filter(link => {\n      let sname = tablesId.find(k => k.value == link.source)?.key;\n      let tname = tablesId.find(k => k.value == link.target)?.key;\n      let s = data.datasets.filter(d => d.name == sname && d.project == project);\n      let t = data.datasets.filter(d => d.name == tname && d.project == project);\n      return s.length > 0 || t.length > 0;\n    }).length > 0\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<ngx-graph\n  [view]=\"[1200, 600]\"\n  layout=\"dagreCluster\"\n  [links]=\"links\"\n  [nodes]=\"nodes\"\n  [clusters]=\"clusters\"\n  [showMiniMap]=\"true\"\n  [zoomToFit$]=\"zoomToFit$\"\n>\n<ng-template #nodeTemplate let-node>\n    <svg:g class=\"node-group ng-star-inserted\">\n<!--        <circle r=\"10\" cx=\"10\" cy=\"10\" class=\"ng-star-inserted\" fill=\"#a95963\"></circle> -->\n        <image [attr.href]=\"node.data.image\" height=\"40\" width=\"40\" fill=\"none\" (click)=\"nodeClick(node)\" fill=\"#a95963\"/>\n        <ng-container *ngIf=\"checkIfSelected(node)\">\n          <image href=\"./assets/check.svg\" height=\"40\" width=\"40\" fill=\"none\" fill=\"#a95963\"/>\n        </ng-container>\n        <text class=\"name\">{{ node.label }}</text>\n    </svg:g>\n</ng-template>\n\n<ng-template #clusterTemplate let-cluster>\n  <svg:g class=\"node cluster\">\n    <image [attr.href]=\"cluster.data.image\" height=\"100\" width=\"100\" fill=\"none\"/>\n    <svg:rect\n      rx=\"5\"\n      ry=\"5\"\n      [attr.width]=\"cluster.dimension.width\"\n      [attr.height]=\"cluster.dimension.height\"\n      [attr.fill]=\"cluster.data.color\"\n    />\n  </svg:g>\n</ng-template>\n\n</ngx-graph>","import { Dataset } from './dataset'\r\n\r\nexport class NodeData {\r\n  image: string = \"assets/dataset.ico\";\r\n  color: string = \"#a95963\";\r\n  dataset!: Dataset\r\n  constructor(image: string,  color: string,  dataset: Dataset) {\r\n    this.image = image\r\n    this.color = color\r\n    this.dataset = dataset\r\n  }\r\n}\r\n\r\nexport class Node {\r\n  id: string;\r\n  label: string;\r\n  data?: NodeData;\r\n  constructor(id: string, label: string, data?: NodeData) {\r\n    this.id = id\r\n    this.label = label\r\n    this.data = data\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  singleHtml: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import value from '*.json';\nimport {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { EventService } from 'src/app/services/events.service';\n\n@Component({\n  selector: 'select-table',\n  templateUrl: './select-table.component.html',\n  styleUrls: ['./select-table.component.css']\n})\nexport class SelectTableComponent implements OnInit {\n\n  tables: string[] = [];\n  constructor(private eventService: EventService) { \n    eventService.tableListEvent$.subscribe(value => this.tables = value.sort())\n  }\n\n  selectTable(value: string|undefined) {\n    this.eventService.emitTableSelectedEvent(value)\n  }  \n\n  myControl = new FormControl();\n  filteredOptions: Observable<string[]> | undefined;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.tables.filter(table => table.toLowerCase().indexOf(filterValue) > -1);\n  }\n\n}\n","  <mat-nav-list>\n    <mat-list-item *ngFor=\"let table of tables\" (click)=\"selectTable(table)\">\n       {{table}}\n    </mat-list-item>\n  </mat-nav-list>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'datalog3';\n}\n","<router-outlet></router-outlet>\n","<mat-toolbar>\n    <span>Data topology</span>\n    <div class=\"button-container\">\n      <button mat-mini-fab color=\"primary\" aria-label=\"Zoom to fit\" (click)=\"zoomToFit()\">\n        <mat-icon>fit_screen</mat-icon>\n      </button>\n    </div>\n    \n    <a *ngIf=\"selected != undefined\" href=\"{{selected.data?.dataset?.sourceFile}}\">{{selected.data?.dataset?.sourceFile}}</a>\n    <span>&nbsp;</span>\n    <span *ngFor=\"let project of selectedNodeProjects\">{{project}}\n      <button mat-mini-fab color=\"primary\" (click)=\"loadProject(project)\">\n        <mat-icon>content_paste</mat-icon>\n      </button>      \n    </span>\n    <div class=\"button-container\">\n      <button mat-mini-fab color=\"primary\" aria-label=\"Clear\" (click)=\"clear()\">\n        <mat-icon>clear</mat-icon>\n      </button>\n    </div>\n\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { EventService } from \"../../services/events.service\";\nimport { Node } from \"../../classes/node\";\n\n@Component({\n  selector: 'app-main-toolbar',\n  templateUrl: './main-toolbar.component.html',\n  styleUrls: ['./main-toolbar.component.css']\n})\nexport class MainToolbarComponent implements OnInit {\n\n  selected: Node | undefined;\n  selectedNodeProjects: (string | undefined)[] | undefined\n  projects: string[] = []\n  selectedProject: string = \"\";\n\n  constructor(private eventService: EventService) { \n    eventService.nodeSelectedEvent$.subscribe(value => {\n      this.selected = value;\n      this.eventService.emitGetGetSelectedNodeProjectEvent(value);\n    })\n    eventService.returnSelectedNodeProjectEvent$.subscribe(value => this.selectedNodeProjects = value)\n    eventService.receiveProjectstEvent$.subscribe(value => this.projects = value)\n  }\n\n  ngOnInit(): void {\n  }\n\n  zoomToFit() {\n    this.eventService.emitZoomToFitEvent();\n  }\n\n  projectSelected(project: string) {\n    this.eventService.emitProjectSelectedEvent(project)\n  }\n\n  clear() {\n    this.eventService.emitClearAllEvent()\n  }\n\n  loadProject(project: string | undefined) {\n    if(project) {\n      this.eventService.emitProjectNameEvent(project)\n    }    \n  }\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopologyComponent } from './components/topology/topology.component';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { AceEditorModule } from 'ngx-ace-editor-wrapper';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { FilesTreeComponent } from './components/files-tree/files-tree.component';\nimport { SourceCodeComponent } from './components/source-code/source-code.component';\nimport { TepmlateEditorComponent } from './components/tepmlate-editor/tepmlate-editor.component';\nimport { SelectTableComponent } from './components/select_table/select-table.component';\nimport { MainToolbarComponent } from './components/main-toolbar/main-toolbar.component';\nimport { MainLayoutComponent } from './components/main-layout/main-layout.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopologyComponent,\n    FilesTreeComponent,\n    SourceCodeComponent,\n    TepmlateEditorComponent,\n    SelectTableComponent,\n    MainToolbarComponent,\n    MainLayoutComponent,\n    ProjectsComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ],  \n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxGraphModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatGridListModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatListModule,\n    MatDividerModule,\n    ScrollingModule,\n    AceEditorModule,\n    FlexLayoutModule\n  ],\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport configProjects from '../../assets/projects.json';\nimport projectsData from '../../assets/projects_data.json';\nimport { Project } from '../classes/project';\nimport { TemplateService } from './template.service';\nimport { environment } from 'src/environments/environment';\nimport { EventService } from './events.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService { \n  constructor(private http: HttpClient, private templateService: TemplateService, private eventService: EventService) { \n    eventService.projectNameEvent$.subscribe(value => {\n      let p: Project | undefined = this.getProject(value)\n      if(p) {\n        this.loadProject(p)\n      }      \n    })\n  }\n  getProjects(): Observable<Project[]> {\n    \n    if(environment.singleHtml == true) {\n      let projects: Project[] = configProjects.filter((p: Project) => p.enable !== false);\n        projects.forEach(project => {\n          if(project.dataExists == true) {\n            this.getJSONData(project)\n          }\n        });        \n      return of(projects)\n    } else {\n      return this.http.get<Project[]>(\"/projectFile\")\n    }\n  }\n\n  private getJSONData(project: Project) {\n      project.data = projectsData.find((d: any) => d.name === project.name)?.data\n  }\n\n  private setData(project: Project, data: any) {\n    project.data = data;\n  }\n\n  getProject(name: string): Project | undefined {\n    return configProjects.find((p: Project) => p.name === name);\n  }\n\n  loadProject(project: Project, clearAll: boolean = true) {\n    if(clearAll === true) {\n      this.eventService.emitClearAllEvent()\n    }    \n    if(!project.data && !environment.singleHtml) {\n      this.templateService.renderTemplate(project.template, JSON.stringify(project.templateParams))\n        .subscribe((s: any) => {\n          project.data = s\n          this.eventService.emitProjectEvent(project);\n        })        \n    } else {\n      this.eventService.emitProjectEvent(project);\n    }    \n  }  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { TemplateFile } from '../classes/tempates';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateService {\n  \n  constructor(private http: HttpClient) { }\n\n  saveTemplate(template: TemplateFile): Observable<TemplateFile> {\n    return this.http.post<TemplateFile>(\"/template\", template)\n  }\n\n  renderTemplate(fileName: string, templateParams?: string) {\n    let params = new HttpParams()\n      .set('fileName', fileName).set('params', templateParams || \"{}\")\n    params.append(\"fileName\", fileName)    \n    if(templateParams) {\n      //params.set('params', templateParams)\n      params.append(\"params\", templateParams)\n    }    \n    return this.http.get(\"/renderTemplate\", { params })\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ProjectFileDir } from 'src/app/classes/topology';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\n\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  data: ProjectFileDir\n}\n\n@Component({\n  selector: 'files-tree',\n  templateUrl: './files-tree.component.html',\n  styleUrls: ['./files-tree.component.css']\n})\nexport class FilesTreeComponent implements OnInit {\n\n  @Input()\n  filesTree?: ProjectFileDir[]\n\n  private _transformer = (node: ProjectFileDir, level: number) => {\n    return {\n      expandable: !!node.childDirs && node.childDirs.length > 0,\n      name: node.name,\n      level: level,\n      data: node\n    };\n  }  \n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(\n      this._transformer, node => node.level, node => node.expandable, node => node.childDirs); \n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() { \n    this.filesTree = []\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  ngOnInit(): void {\n    if(this.filesTree) {\n      this.dataSource.data = this.filesTree;\n    } else {\n      this.dataSource.data = []\n    }\n    \n  }\n\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n      <!-- use a disabled button to provide padding for tree leaf -->\n      <button mat-icon-button disabled></button>\n      {{node.name}}\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n      <button mat-icon-button matTreeNodeToggle\n              [attr.aria-label]=\"'Toggle ' + node.name\">\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n        </mat-icon>\n      </button>\n      {{node.name}}\n    </mat-tree-node>\n  </mat-tree>\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-source-code',\n  templateUrl: './source-code.component.html',\n  styleUrls: ['./source-code.component.css']\n})\nexport class SourceCodeComponent implements OnInit {\n\n  @Input()\n  codeValue: string = \"\";\n  @ViewChild('editor') editor: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ace-editor\n[(text)]=\"codeValue\"\n #editor style=\"height:600px;\">\n</ace-editor>\n","import { Dataset } from \"./dataset\"\r\n\r\nexport class ProjectFileDir {\r\n  project: string = \"\"\r\n  name: string = \"\"\r\n  childDirs?: ProjectFileDir[]\r\n  isFile: boolean = false\r\n  fileContent: string = \"\"\r\n}\r\n\r\nexport class Topology {\r\n  tools!: any[]\r\n  actions!: any[]\r\n  datasets!: Dataset[]\r\n  projectFiles?: ProjectFileDir[]\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Node, NodeData } from \"../classes/node\";\nimport { Project } from '../classes/project';\nimport { Topology } from \"../classes/topology\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService { \n  constructor() { }\n\n  private clearAllEventSource = new Subject<boolean>();\n  clearAllEvent$ = this.clearAllEventSource.asObservable();\n  emitClearAllEvent() {\n    this.clearAllEventSource.next(true);\n  }\n\n  private zoomToFitEventSource = new Subject<boolean>();\n  zoomToFitEvent$ = this.zoomToFitEventSource.asObservable();\n  emitZoomToFitEvent() {\n    this.zoomToFitEventSource.next(true);\n  }  \n\n  private nodeSelectedEventSource = new Subject<Node>();\n  nodeSelectedEvent$ = this.nodeSelectedEventSource.asObservable();\n  emitNodeSelectedEvent(node: Node) {\n    this.nodeSelectedEventSource.next(node);\n  }\n\n  private getSelectedNodeProjectEventSource = new Subject<Node>();\n  getSelectedNodeProjectEvent$ = this.getSelectedNodeProjectEventSource.asObservable();\n  emitGetGetSelectedNodeProjectEvent(node: Node) {\n    this.getSelectedNodeProjectEventSource.next(node);\n  }\n\n  private returnSelectedNodeProjectEventSource = new Subject<(string | undefined)[] | undefined>();\n  returnSelectedNodeProjectEvent$ = this.returnSelectedNodeProjectEventSource.asObservable();\n  emitReturnSelectedNodeProjectEvent(projects: (string | undefined)[] | undefined) {\n    this.returnSelectedNodeProjectEventSource.next(projects);\n  }\n\n  private receiveProjectsEventSource = new Subject<string[]>();\n  receiveProjectstEvent$ = this.receiveProjectsEventSource.asObservable();\n  emitReceiveProjectsEvent(projects: string[]) {\n    this.receiveProjectsEventSource.next(projects);\n  }\n\n  private projectSelectedEventSource = new Subject<string>();\n  projectSelectedEvent$ = this.projectSelectedEventSource.asObservable();\n  emitProjectSelectedEvent(project: string) {\n    this.projectSelectedEventSource.next(project);\n  }\n\n  private joinDataEventSource = new Subject<any>();\n  joinDataEvent$ = this.joinDataEventSource.asObservable();\n  emitJoinDataEvent(data: any) {\n    this.joinDataEventSource.next(data);\n  }\n\n  private projectEventSource = new Subject<Project>();\n  projectEvent$ = this.projectEventSource.asObservable();\n  emitProjectEvent(data: any) {\n    this.projectEventSource.next(data);\n  }\n\n  private projectNameEventSource = new Subject<string>();\n  projectNameEvent$ = this.projectNameEventSource.asObservable();\n  emitProjectNameEvent(data: any) {\n    this.projectNameEventSource.next(data);\n  }  \n\n  private tableListEventSource = new Subject<string[]>();\n  tableListEvent$ = this.tableListEventSource.asObservable();\n  emitTableListEvent(list: string[]) {\n    this.tableListEventSource.next(list);\n  }\n\n  private tableSelectedEventSource = new Subject<string|undefined>();\n  tableSelectedEvent$ = this.tableSelectedEventSource.asObservable();\n  emitTableSelectedEvent(value: string|undefined) {\n    this.tableSelectedEventSource.next(value);\n  }  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TopologyComponent } from './components/topology/topology.component';\nimport { MainLayoutComponent } from './components/main-layout/main-layout.component';\n\nconst routes: Routes = [\n  //{ path: '', redirectTo: '/topoloy', pathMatch: 'full' },\n  //{ path: '', component: TopologyComponent },  \n  { path: '', component: MainLayoutComponent },  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}